{"version":3,"sources":["pages/Authorization/config.ts","components/Timer/Timer.tsx","media/student.png","media/admin.jpg","config/urls.ts","utils/network.ts","pages/Authorization/Authorization.tsx","components/Header/Header.tsx","components/InputNumber/InputNumber.tsx","components/IconPlus/IconPlus.tsx","components/Tags/Tags.tsx","pages/UsersControl/UsersControl.tsx","App/App.tsx","index.tsx"],"names":["secondsToTime","s","h","Math","trunc","m","Timer","id","onZero","size","useState","time","seconds","changeTime","isActive","setActive","OnStopCallback","useCallback","useEffect","timer","window","setInterval","clearInterval","className","style","fontSize","xs","lg","DOMAIN","TIMETABLE_URL","AUTH_URL","Urls","root","timetable","slugEdit","slugRoot","get","group","week","post","delete","auth","notFound","axios","defaults","withCredentials","makePost","url","data","a","method","headers","Logout","history","then","r","catch","e","localStorage","clear","replace","Header","location","useLocation","useHistory","collapseIsOpen","collapseChange","toggleCollapse","includes","pathname","color","dark","expand","onClick","isOpen","navbar","left","active","to","type","right","src","getItem","Admin","Avatar","alt","sm","basic","InputNumber","min","max","onChange","placeholder","disabled","value","setValue","changeInputValue","target","intValue","parseInt","IconPlus","icon","faTimes","React","memo","Tags","tags","changeTags","inp","setInp","tagsOld","push","length","UsersControl","userType","setUserType","NaN","sem","setSem","setGroup","handleSem","nmb","handleGroup","isNaN","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.428b6478.chunk.js","sourcesContent":["export const DEFAULT_SESSION_TIME = 3 * 24 * 60 * 60 * 1000; // 3 days in ms\nexport const PROTECTED_SESSION_TIME = 2 * 3600; // 2 hours in sec\nexport const ERROR_SERVER = \"Внутренняя ошибка сервера, попробуйте позже!\";\nexport const SERVER_UNAVAILABLE = \"Связь с сервером потеряна!\";\nexport const ERROR_AUTHORIZATION = \"Неверное имя пользователя или пароль!\";\nexport const PASSWORD_MAX_LENGTH = 35;\nexport const PASSWORD_MIN_LENGTH = 5;\nexport const EMPTY_EMAIL_FIELD = \"Email не может быть пустым!\";\nexport const EMPTY_PASSWORD_FIELD = \"Пароль не может быть пустым!\";\nexport const ERROR_EMAIL_FIELD = \"Некорректный email!\";\nexport const ERROR_PASSWORD_FIELD = `Длина пароля должна быть от ${PASSWORD_MIN_LENGTH} до ${PASSWORD_MAX_LENGTH} символов!`;\nexport const USER_TYPE_STUDENT = \"1\";\nexport const USER_TYPE_PROFESSOR = \"2\";\nexport const USER_TYPE_ADMIN = \"0\";","import React, {useEffect, useState, useCallback} from \"react\";\n\nimport {PROTECTED_SESSION_TIME} from \"../../pages/Authorization/config\";\n\nconst secondsToTime = (s: number) => {\n    const h = Math.trunc(s / 3600);\n    const m = Math.trunc(s / 60 - 60 * h);\n    s = s - 3600 * h - 60 * m\n    return {\n        h: h,\n        m: m,\n        s: s\n    };\n}\n\ntype Props = {\n    id?: string,\n    onZero?: () => void,\n    size: { sm?: boolean, xs?: boolean, lg?: boolean }\n}\n\nconst Timer: React.FC<Props> = ({id, onZero, size}) => {\n\n    const [time, changeTime] = useState({time: secondsToTime(PROTECTED_SESSION_TIME), seconds: PROTECTED_SESSION_TIME});\n    const [isActive, setActive] = useState(true);\n\n    const OnStopCallback = useCallback(\n        () => {\n            if (onZero) {\n                onZero();\n            }\n        },\n        [onZero],\n    );\n\n    const getSize = () => {\n        if (size.xs) {\n            return \"0.7rem\";\n        }\n        return size.lg ? \"1.2rem\" : \"0.9rem\";\n    }\n\n    useEffect(() => {\n        let timer = 0;\n        if (isActive) {\n            timer = window.setInterval(() => {\n                let seconds = time.seconds - 1;\n                changeTime({\n                    time: secondsToTime(seconds),\n                    seconds: seconds,\n                });\n                if (seconds === 0 && isActive) {\n                    setActive(!isActive);\n                    OnStopCallback();\n                }\n            }, 1000);\n        } else if (!isActive && time.seconds !== 0) {\n            window.clearInterval(timer);\n        }\n        return () => window.clearInterval(timer);\n    }, [isActive, time.seconds, OnStopCallback]);\n\n    return (\n        <div key={id} className=\"d-flex\">\n            <div style={{fontSize: getSize()}}>\n                {time.time.h}:{time.time.m}:{time.time.s}\n            </div>\n        </div>\n    );\n}\n\nexport default Timer;\n\n","export default __webpack_public_path__ + \"static/media/student.72adb2a4.png\";","export default __webpack_public_path__ + \"static/media/admin.bb4d60bc.jpg\";","//export const DOMAIN = \"http://localhost:8080/api/v1/\";\n//export const DOMAIN = \"https://10-tka.pp.ua:8080/api/v1/\"\n\nexport const DOMAIN = \"http://10-tka.pp.ua:8080/api/v1/\";\nexport const LOGIN = \"users/login\";\nexport const LOGOUT = \"users/logout\";\nexport const ME = \"users/me\"\n\nconst BASE_URL = \"/\";\nexport const TIMETABLE_URL = `${BASE_URL}timetable`;\nconst AUTH_URL = `${BASE_URL}auth`;\nconst ANY_URL = \"*\"\n\nexport const Urls = {\n    root: BASE_URL,\n    timetable: {\n        slugEdit: `${TIMETABLE_URL}/edit`,\n        slugRoot: `${TIMETABLE_URL}`,\n        get: (group: string, week: number): string => `${DOMAIN}timetable/${group}/${week}`,\n        post: () => `${DOMAIN}timetable/create`,\n        delete: () => `${DOMAIN}timetable/`\n    },\n    auth: AUTH_URL,\n    notFound: ANY_URL,\n}","import axios from \"axios\";\naxios.defaults.withCredentials = true;\n\nexport const makeGet = async (url: string) => {\n    return axios({\n        method: \"get\",\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n        withCredentials: true,\n        url: url\n    });\n};\n\nexport const makePost = async (url: string, data: any) => {\n    return axios({\n        method: \"post\",\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n\n        url: url,\n        data: data,\n        withCredentials: true\n    });\n};\n\nexport const makeDelete = async (url: string, data: any) => {\n    return axios({\n        method: \"delete\",\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n        url: url,\n        data: data,\n        withCredentials: true\n    });\n};\n\n","import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\"\n\nimport {DOMAIN, LOGIN, LOGOUT, Urls} from \"@config/urls\";\n\nimport {\n    DEFAULT_SESSION_TIME,\n    EMPTY_EMAIL_FIELD,\n    EMPTY_PASSWORD_FIELD,\n    ERROR_AUTHORIZATION,\n    ERROR_EMAIL_FIELD,\n    ERROR_PASSWORD_FIELD,\n    ERROR_SERVER,\n    PASSWORD_MAX_LENGTH,\n    PASSWORD_MIN_LENGTH,\n    SERVER_UNAVAILABLE\n} from \"./config\";\nimport \"./Authorization.scss\"\nimport AuthError from \"@components/AuthError\";\nimport {makePost} from \"@utils/network\";\nimport {addUsers} from \"@utils/addUsers\";\n\nexport const Logout = (history: any) => {\n    makePost(`${DOMAIN}${LOGOUT}`, null).then((r) => {\n    }).catch((e) => {\n    })\n    localStorage.clear()\n    history.replace(Urls.auth);\n}\n\nexport const DefaultCheckLogin = () => {\n    const lastAuthTime = parseInt(localStorage.getItem(\"loginTime\") as string);\n    return lastAuthTime != null && Date.now() - lastAuthTime < DEFAULT_SESSION_TIME;\n}\n\nconst Auth = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailDirty, setEmailDirty] = useState(false);\n    const [passwordDirty, setPasswordDirty] = useState(false);\n    const [emailError, setEmailError] = useState(EMPTY_EMAIL_FIELD);\n    const [passwordError, setPasswordError] = useState(EMPTY_PASSWORD_FIELD);\n    const [formValid, setFormValid] = useState(false);\n    const [userError, setUserError] = useState('');\n    const [checkBox, setCheckBox] = useState(false);\n    const history = useHistory();\n\n    const CheckBoxHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setCheckBox(e.target.checked);\n    }, []);\n\n    const HandleSubmit = React.useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n\n        //addUsers();\n\n        makePost(`${DOMAIN}${LOGIN}`, {\n            email: email,\n            password: password,\n            checkbox: checkBox\n        }).then((response) => {\n            localStorage.setItem(\"loginTime\", Date.now().toString());\n            const userGroup = response.data.user.group;\n            //console.log(\"User = \", response.data.user)\n            if (userGroup !== \"\") {\n                localStorage.setItem(\"user_group\", response.data.user.group)\n            }\n            localStorage.setItem(\"user_role\", response.data.user.role)\n            history.push(Urls.timetable.slugRoot);\n        }).catch((error) => {\n            if (error.response) {\n                if (error.response.status === 404) {\n                    setUserError(ERROR_AUTHORIZATION);\n                } else {\n                    setUserError(ERROR_SERVER);\n                }\n            } else {\n                setUserError(SERVER_UNAVAILABLE);\n            }\n            return;\n        });\n\n    }, [email, password, checkBox, history]);\n\n    useEffect(() => {\n        if (emailError || passwordError) {\n            setFormValid(false);\n        } else {\n            setFormValid(true);\n        }\n    }, [emailError, passwordError]);\n\n    const EmailHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const emailNew = e.target.value;\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!re.test(String(emailNew).toLowerCase())) {\n            setEmailError(ERROR_EMAIL_FIELD)\n        } else setEmailError('');\n        setEmail(emailNew);\n    }, []);\n\n    const PasswordHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const passwdNew = e.target.value;\n        if (passwdNew.length < PASSWORD_MIN_LENGTH || passwdNew.length > PASSWORD_MAX_LENGTH) {\n            setPasswordError(ERROR_PASSWORD_FIELD);\n            if (!passwdNew.length) {\n                setPasswordError(EMPTY_PASSWORD_FIELD);\n            }\n        } else setPasswordError('');\n        setPassword(passwdNew);\n    }, []);\n\n    const BlurHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.name === \"email\") {\n            setEmailDirty(true);\n        } else {\n            setPasswordDirty(true);\n        }\n        setUserError(\"\");\n    }, []);\n\n    return (\n        // <div className=\"Auth h-100 d-flex justify-content-center align-items-center text-center\">\n        //     <form className=\"Auth__form\">\n        //         <div className=\"form-group\">\n        //             <div>Email</div>\n        //             {(emailDirty && emailError) && <AuthError msg={emailError}/>}\n        //             <input onChange={EmailHandler} value={email} name=\"email\" onBlur={BlurHandler}\n        //                    type=\"text\" className=\"form-control\"\n        //                    placeholder=\"Введите email\"/>\n        //         </div>\n        //         <div className=\"form-group\">\n        //             <div>Пароль</div>\n        //             {(passwordDirty && passwordError) && <AuthError msg={passwordError}/>}\n        //             <input onChange={PasswordHandler} value={password} name=\"password\"\n        //                    onBlur={BlurHandler} type=\"password\" className=\"form-control Auth__pass\"\n        //                    placeholder=\"Введите пароль\"/>\n        //         </div>\n        //         <div className=\"form-check\">\n        //             <input onChange={CheckBoxHandler} type=\"checkbox\" className=\"form-check-input\"/>\n        //             <div className=\"form-check-div\">Запомнить</div>\n        //         </div>\n        //         {(userError) && <AuthError msg={userError}/>}\n        //         <button disabled={!formValid} onClick={HandleSubmit} type=\"submit\" className=\"btn Auth__btn mt-2\">Войти\n        //         </button>\n        //     </form>\n        // </div>\n        <div className=\"container-fluid d-flex h-100 justify-content-center align-items-center text-center\">\n            <div className=\"row bg-white shadow-sm m-1\">\n                <div className=\"col border rounded p-4\">\n                    <form>\n                        <div className=\"form-group\">\n                            <div>Email</div>\n                            {(emailDirty && emailError) && <AuthError msg={emailError}/>}\n                            <input onBlur={BlurHandler} onChange={EmailHandler} value={email}\n                                   type=\"text\" className=\"form-control\" name=\"email\" placeholder=\"Введите email...\"/>\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">Мы не передаем ваши данные\n                                сторонним источникам</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <div>Пароль</div>\n                            {(passwordDirty && passwordError) && <AuthError msg={passwordError}/>}\n                            <input onBlur={BlurHandler} onChange={PasswordHandler} value={password}\n                                   className=\"form-control\" type=\"password\"\n                                   placeholder=\"Введите пароль...\"/>\n                        </div>\n                        <div className=\"d-flex flex-row justify-content-center align-items-center\">\n                            <input className=\"mr-1\" onChange={CheckBoxHandler} type=\"checkbox\"/>\n                            <div>Запомнить меня</div>\n                        </div>\n                        <div className=\"p-0\"> {(userError) && <AuthError msg={userError}/>}</div>\n                        <div className=\"p-3\">\n                            <button disabled={!formValid} onClick={HandleSubmit} type=\"submit\"\n                                    className=\"btn Auth__btn mt-2\">Войти\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Auth;\n","import React, {useCallback, useState} from \"react\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {\n    MDBNavbar,\n    MDBNavbarBrand,\n    MDBNavbarNav,\n    MDBNavItem,\n    MDBNavLink,\n    MDBNavbarToggler,\n    MDBCollapse,\n    MDBDropdown,\n    MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem\n} from \"mdbreact\";\n\nimport Timer from \"@components/Timer\";\nimport Avatar from \"@media/student.png\"\nimport Admin from \"@media/admin.jpg\"\nimport {Urls} from \"@config/urls\";\n\nimport {Logout} from \"../../pages/Authorization\";\nimport \"./Header.scss\"\n\n\nconst Header = () => {\n    const location = useLocation();\n    const history = useHistory();\n\n    const Rendered = () => ([Urls.timetable.slugRoot, Urls.timetable.slugEdit, Urls.root].includes(location.pathname))\n\n    const [collapseIsOpen, collapseChange] = useState(false);\n\n    const toggleCollapse = useCallback(() => {\n        collapseChange(!collapseIsOpen);\n    }, [collapseIsOpen]);\n\n    return (\n        <div>\n            {Rendered() ? <div className=\"navbar__main\">\n                <MDBNavbar className=\"mb-3\" color=\"teal lighten-2\" dark expand=\"md\">\n                    <MDBNavbarBrand>\n                        <strong className=\"white-text\">10-tka</strong>\n                    </MDBNavbarBrand>\n                    <MDBNavbarToggler onClick={toggleCollapse}/>\n                    <MDBCollapse id=\"navbarCollapse3\" isOpen={collapseIsOpen} navbar>\n                        <MDBNavbarNav left className=\"col-lg-8\">\n                            <MDBNavItem active>\n                                <MDBNavLink to={Urls.timetable.slugRoot}>Главная</MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem active>\n                                <MDBNavLink to={Urls.timetable.slugEdit}>Конструктор расписания</MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem active className=\"d-md-none\">\n                                <button type=\"button\"\n                                        className=\"link-logout\"\n                                        onClick={() => {\n                                            Logout(history)\n                                        }}>\n                                    Выход\n                                </button>\n                            </MDBNavItem>\n                        </MDBNavbarNav>\n                        <MDBNavbarNav right className=\" d-none d-md-block\">\n                            <div\n                                className=\"d-flex align-items-center justify-content-end flex-nowrap\">\n                                <MDBNavItem>\n                                    <img className=\"navbar__avatar\"\n                                         src={localStorage.getItem(\"user_role\") === \"admin\" ? Admin : Avatar}\n                                         alt=\"oops\"/>\n                                </MDBNavItem>\n                                <MDBNavItem\n                                    className=\"container-fluid flex-column justify-content-center text-center\">\n                                    <span\n                                        className=\"main__title\">{localStorage.getItem(\"user_role\") === \"admin\" ? \"Admin\" : \"Вася Пупкин\"}</span>\n                                    <div className=\"text-black-50\">\n                                        <Timer size={{sm: true}} onZero={() => {\n                                            Logout(history);\n                                        }}/>\n                                    </div>\n                                </MDBNavItem>\n                                <MDBNavItem>\n                                    <MDBDropdown>\n                                        <MDBDropdownToggle className=\"dropdown-toggle navbar__dropdown\">\n                                        </MDBDropdownToggle>\n                                        <MDBDropdownMenu right basic>\n                                            <MDBDropdownItem onClick={() => {\n                                                Logout(history);\n                                            }}>Выйти</MDBDropdownItem>\n                                        </MDBDropdownMenu>\n                                    </MDBDropdown>\n                                </MDBNavItem>\n                            </div>\n                        </MDBNavbarNav>\n                    </MDBCollapse>\n                </MDBNavbar>\n            </div> : null}\n        </div>\n    );\n}\n\nexport default Header;\n\n","import React, {useCallback, useState} from \"react\";\nimport \"./InputNumber.scss\"\n\ntype Props = {\n    disabled?: boolean;\n    placeholder: string;\n    id: string;\n    min: number;\n    max: number;\n    onChange?: (id: string, value: number) => void;\n}\n\nconst InputNumber: React.FC<Props> = ({id, min, max, onChange, placeholder, disabled}) => {\n    const [value, setValue] = useState(\"\")\n\n    const changeInputValue = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value;\n        let intValue = parseInt(value);\n        if (intValue < min || intValue > max) {\n            return;\n        }\n        setValue(value);\n        if (onChange) {\n            onChange(id, intValue);\n        }\n    }, [onChange, id, min, max])\n\n    return (\n        <input disabled={disabled} type=\"number\" placeholder={placeholder} className=\"input-number\"\n               value={value}\n               onChange={changeInputValue}/>\n    );\n\n}\n\nexport default InputNumber;","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons/faTimes\";\nimport \"./IconPlus.scss\"\n\nconst IconPlus = () => (\n    <FontAwesomeIcon className=\"icon-remover\" icon={faTimes} size={\"sm\"}\n                     color={\"#e85050\"}/>\n)\n\nexport default React.memo(IconPlus);","import React from \"react\";\nimport \"./Tags.scss\"\nimport IconPlus from \"@components/IconPlus\";\n\ntype Props = {\n    placeholder: string;\n    id: string;\n}\n\nconst Tags: React.FC<Props> = ({id,placeholder}) => {\n    const [tags, changeTags] = React.useState<Array<React.ReactNode>>([])\n    const [inp, setInp] = React.useState(\"\")\n\n    const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setInp(e.target.value)\n    }\n\n    const addTag = () => {\n        const tagsOld = [...tags]\n        tagsOld.push(\n            <div className=\"d-flex justify-content-center align-items-center\">\n                <div className=\"tag mt-1 mr-1\" key={tagsOld.length} id={id}>{inp}</div>\n                <IconPlus/>\n            </div>\n        )\n\n        changeTags(tagsOld)\n        setInp(\"\")\n    }\n    return (\n        <div>\n            <div>{tags}</div>\n            <input value={inp} onChange={handleInput} type=\"text\" className=\"Lesson mt-2\"\n                   placeholder={placeholder}/>\n            <button type=\"button\" onClick={addTag} className=\"add text-center\">+</button>\n        </div>\n    )\n}\n\nexport default Tags;","import React from \"react\";\nimport \"./UsersControl.scss\"\nimport InputNumber from \"@components/InputNumber\";\nimport Tags from \"@components/Tags\";\n\nconst UsersControl = () => {\n    //const [name, changeName] = React.useState(\"\")\n    const [userType, setUserType] = React.useState(\"Студент\")\n    const [sem, setSem] = React.useState(NaN)\n    const [group, setGroup] = React.useState(NaN)\n\n    const handleUserType = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        setUserType(e.target.value)\n    }\n    const handleSem = (id: string, nmb: number) => {\n        setSem(nmb)\n    }\n    const handleGroup = (id: string, nmb: number) => {\n        setGroup(nmb)\n    }\n\n    const groupInfo = () => {\n        if (!isNaN(sem) && !isNaN(group)) {\n            return (\n                <div className=\"IU mt-4\">{`ИУ10-${sem}${group}`}</div>)\n        }\n        return null;\n    }\n\n    const defineRole = () => {\n        if (userType === \"Студент\") {\n            return (\n                <div>\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"student-sem mr-2\">\n                            <div>Семестр</div>\n                            <InputNumber placeholder={\"Сем\"} onChange={handleSem} id={\"0\"} min={1} max={12}/>\n                        </div>\n                        <div className=\"student-group mr-2\">\n                            <div>Группа</div>\n                            <InputNumber placeholder={\"Группа\"} onChange={handleGroup} id={\"1\"} min={1} max={5}/>\n                        </div>\n                        {groupInfo()}\n                    </div>\n                    <div className=\"student-phone\">\n                        <div>Телефон</div>\n                        <input className=\"student-phone_input\"/>\n                    </div>\n                    <div className=\"student-email\">\n                        <div>Email</div>\n                        <input className=\"student-email_input\"/>\n                    </div>\n                </div>\n            )\n        } else if (userType === \"Преподаватель\") {\n            return (\n                <div>\n                    <Tags placeholder={\"Dis\"} id={\"1\"}/>\n                    <div className=\"prof-info mt-2\">\n                        <input placeholder=\"О себе\" className=\"prof-info_input\"/>\n                    </div>\n                    <div className=\"prof-phone\">\n                        <div>Телефон</div>\n                        <input className=\"prof-phone_input\"/>\n                    </div>\n                    <div className=\"prof-email\">\n                        <div>Email</div>\n                        <input className=\"prof-email_input\"/>\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div>\n                <div className=\"met-info mt-2\">\n                    <input placeholder=\"О себе\" className=\"met-info_input\"/>\n                </div>\n                <div className=\"met-email\">\n                    <div>Email</div>\n                    <input className=\"met-email_input\"/>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <form className=\"users-control\">\n            <div className=\"users-control_surname\">\n                <div>Фамилия</div>\n                <input className=\"form-control_surname\"/>\n            </div>\n            <div className=\"users-control_name\">\n                <div>Имя</div>\n                <input className=\"form-control_name\"/>\n            </div>\n            <div className=\"users-control_patronymic\">\n                <div>Отчество</div>\n                <input className=\"form-control_patronymic\"/>\n            </div>\n            <div className=\"users-control_roles\">\n                <div>Тип пользователя</div>\n                <select value={userType} onChange={handleUserType} className=\"form-control_roles\">\n                    <option>Студент</option>\n                    <option>Преподаватель</option>\n                    <option>Методист</option>\n                </select>\n            </div>\n            {defineRole()}\n            <button type=\"button\" className=\"btn users-control_load mt-2\">Сохранить</button>\n        </form>\n    )\n}\n\nexport default UsersControl;","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport {PrivateRoute} from \"@utils/privateRoute\"\nimport Header from \"@components/Header\";\nimport {Urls} from \"@config/urls\"\n\nimport Timetable from \"../pages/Timetable\";\nimport Auth from \"../pages/Authorization\";\nimport NotFoundPage from \"../pages/NotFound\";\nimport Home from \"../pages/Home\";\nimport UsersControl from \"../pages/UsersControl\";\nimport \"../styles/main.scss\"\n\n\n\n// const App = () => {\n//     return (\n//         <BrowserRouter>\n//             <div className=\"App h-100\">\n//                 <Header/>\n//                 <Switch>\n//                     <PrivateRoute exact path={Urls.root}\n//                                   component={Home}/>\n//                     <PrivateRoute exact path={Urls.timetable.slugRoot}\n//                                   component={Home}/>\n//                     <PrivateRoute exact path={Urls.timetable.slugEdit}\n//                                   component={Timetable}/>\n//                     <Route exact path={Urls.auth} component={Auth}/>\n//                     <Route path={Urls.notFound} component={NotFoundPage}/>\n//                 </Switch>\n//             </div>\n//         </BrowserRouter>\n//     )\n// }\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <div className=\"App h-100\">\n                <Header/>\n                <UsersControl/>\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default App;\n\n//https://github.com/ktsstudio/kts-school-frontend","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./styles/main.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}