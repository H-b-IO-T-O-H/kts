{"version":3,"sources":["config/urls.ts","utils/privateRoute.tsx","pages/Authorization/config.ts","components/Timer/Timer.tsx","media/student.png","media/admin.jpg","components/AuthError/AuthError.tsx","utils/network.ts","pages/Authorization/Authorization.tsx","components/Header/Header.tsx","components/ButtonTimetable/ButtonTimetable.tsx","components/HiddenInput/HiddenInput.tsx","components/ButtonWithInput/ButtonWithInput.tsx","components/InputNumber/InputNumber.tsx","config/config.ts","components/AdminPanel/AdminPanel.tsx","components/ButtonsLogo/ButtonsLogo.tsx","components/DragAndDrop/DroppableElem/DroppableElem.tsx","components/DragAndDrop/DraggableArea/DraggableArea.tsx","components/IconPlus/IconPlus.tsx","components/DragAndDrop/DroppableArea/DroppableArea.tsx","components/DragAndDrop/config.ts","components/Card/Card.tsx","components/Lesson/Lesson.tsx","components/Blog/blogTag.tsx","components/PostCommentView/PostComment.tsx","components/ViewPost/ViewPost.tsx","components/Pagination/pagination.tsx","pages/PostsList/PostsList.tsx","pages/Home/Home.tsx","components/StatusLabel/StatusLabel.tsx","components/DragAndDrop/DAndD.tsx","pages/Timetable/timetable.tsx","pages/NotFound/NotFound.tsx","components/AutoCompleteInput/AutoInput.tsx","components/Tags/config.ts","components/Tags/Tags.tsx","pages/UsersControl/config.ts","pages/UsersControl/usersTables/usersTables.tsx","pages/UsersControl/UsersControl.tsx","components/PulseCheckBox/pulseCheckBox.tsx","pages/PostCreate/createPost.tsx","pages/Profile/Profile.tsx","App/App.tsx","index.tsx"],"names":["DOMAIN","BASE_URL","USER_URL","TIMETABLE_URL","AUTH_URL","PANEL_URL","POST_URL","FEED_URL","Urls","root","user","slugRoot","slugMe","postCreate","postUpdate","getStudentsAll","getProfessorsAll","feed","timetable","slugEdit","get","group","week","post","delete","panel","slugCreate","discipline","getAll","auth","notFound","PrivateRoute","Component","component","rest","render","props","location","pathname","to","state","from","EMPTY_PASSWORD_FIELD","ERROR_EMAIL_FIELD","ERROR_PASSWORD_FIELD","USER_TYPE_STUDENT","USER_TYPE_PROFESSOR","USER_TYPE_METHODIST","secondsToTime","s","h","Math","trunc","m","Timer","id","onZero","size","useState","time","seconds","changeTime","isActive","setActive","OnStopCallback","useCallback","useEffect","timer","window","setInterval","clearInterval","className","style","fontSize","xs","lg","AuthError","msg","React","memo","axios","defaults","withCredentials","makeGet","url","a","method","headers","makePost","data","makePut","makeDelete","Logout","history","then","r","catch","e","localStorage","clear","replace","Auth","email","setEmail","password","setPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","formValid","setFormValid","userError","setUserError","checkBox","setCheckBox","useHistory","CheckBoxHandler","target","checked","HandleSubmit","preventDefault","setItem","Date","now","toString","push","EmailHandler","emailNew","value","test","String","toLowerCase","PasswordHandler","passwdNew","length","BlurHandler","name","onBlur","onChange","type","placeholder","disabled","onClick","Header","useLocation","collapseIsOpen","collapseChange","toggleCollapse","includes","color","dark","expand","isOpen","navbar","left","active","getItem","right","src","Admin","Avatar","alt","sm","basic","ButtonTimetable","btn","children","background","title","HiddenInput","handleChange","display","ButtonWithInput","onBtnChange","onInputChange","onAreaChange","inputs","activeInput","areaValue","changeValueArea","inputValue","changeValueInput","collapseOpen","changeCollapse","changeAreaValue","maxAreaLength","setActiveElement","disableInputs","changeInputValue","maxInputLength","buttonFields","buttonCollapse","InputNumber","min","max","defaultValue","setValue","intValue","parseInt","Week","day","date","buttonsContent","LessonsTime","TAG_GENERAL","TAG_IMPORTANT","TAG_EDUCATIONAL","AdminPanel","dayIdx","changeDay","getPanelData","panelLabel","setLabel","semester","weekType","groupInfo","setInfo","changeLabelInfo","newInfo","isNaN","newLabel","icon","faCogs","uuid","faPlus","NaN","btnLogo","require","bind","btnXs","ButtonsLogo","idx","backgroundColor","DroppableElem","sourceIdx","header","footer","isEmpty","faMapMarkerAlt","DraggableArea","droppableColumn","droppableId","isDropDisabled","provided","ref","innerRef","map","item","index","draggableId","snapshot","Fragment","draggableProps","dragHandleProps","border","isDragging","faBars","opacity","IconPlus","faTimes","DroppableArea","Lists","removeList","removeItem","Object","keys","list","isDraggingOver","faClock","Labels","LabelsInt","0","1","2","3","4","5","6","7","findNextDay","some","saveTimetable","deleted","panelData","showLabel","week_type","week_number","days","forEach","i","day_order","lessons","lesson","lesson_order","lesson_id","auditorium","lesson_type","content","success","console","log","lessons_ids","response","status","resp","postWeekData","err","Card","currentDay","items","elem","Lesson","BlogTag","CommentView","key","text","viewByAuthor","answers","commentAuthor","onDeleteClick","PostView","isOutputFull","isLiked","changeLiked","likesCnt","changeLikesCnt","commentsCnt","comments","changeComments","href","rel","document","getElementById","click","undefined","oldComments","authorAvatarPath","commentId","author","n","text_forms","n1","abs","declOfNum","data-spy","data-offset","comment","findIndex","c","splice","deleteComment","alert","Pagination","circle","aria-label","aria-hidden","PostsList","posts","changePosts","oldPosts","prepareWeek","weekDays","newList","getWeekType","Home","weekDay","weekInfo","changeWeekInfo","orgInfo","changeOrgInfo","changeLessons","today","getDate","getDay","weekAgo","monthIdx","getMonth","months","floor","getWeekData","weekData","userGroup","savedWeek","error","StatusLabel","info","shown","isShown","setTimeout","clearTimeout","DragAndDrop","changeDeleted","changeList","changeDayIdx","areasValue","setAreasValues","inputsValue","setValues","setPanelData","changeArea","oldAreas","changeInput","oldInputs","useMemo","onDragEnd","result","source","destination","header_text","footer_text","startIndex","endIndex","Array","removed","reorder","draggable","droppableIndex","destClone","copy","AddList","deletedLessons","getPanelDataHandler","faSave","Timetable","NotFoundPage","homeRedirectHandler","goBack","AutoInput","inputProps","dataList","createElement","input","setAttribute","option","dataListOption","appendChild","ERROR_TAG_FIELD","Tags","tags","changeTags","selectList","noFocus","errMsg","tagInput","setTagInp","label","handleInput","tagInfo","tag","isTagValid","handleBlur","handleDelete","tagsOld","tagId","obj","addTag","tagOld","MAX_SNP","ERROR_NAME_FIELD","ERROR_SURNAME_FIELD","ERROR_PATRONYMIC_FIELD","ERROR_ABOUT_FIELD","btnPasswd","len","generatePassword","checkRussian","str","UsersTable","userType","rowClickEvent","needDownload","setDownload","timerRedo","setTimerRedo","isReady","setReady","columns","rows","setData","handleClick","users","responseConverter","finally","tableDataTemplate","field","sort","surname","patronymic","phone","student_group","disciplines","prof_disciplines_str","substring","split","join","about","clickEvent","handleRedo","faRedoAlt","hover","striped","infoLabel","paginationLabel","noRecordsFoundLabel","bordered","responsive","small","InitialUser","role","sem","UsersControl","inputPasswd","setInputPasswd","userInfo","setUserInfo","setTimer","setDisciplines","wasEdit","oldPhone","oldEmail","isDataForEdit","changeEditFlag","btnText","setBtnText","userValid","setUserValid","inputElem","handleSubmit","fieldsCanBeEmpty","isFormValid","isValid","canBeEmpty","noEmptyFields","notEmpty","newUser","trim","prof_disciplines","dis","handlePassword","oldUser","oldUserValid","handleUserInfo","telephone","numbersOld","numbersNew","handleInputId","handleUserEdit","slice","prepareUser","d","discipline_content","newTags","oldInfo","PulseCheckBox","description","isChecked","changeChecked","CreatePost","postImgUrl","allowComments","buttonText","postInfo","changePostInfo","changeTag","postImgInput","changePostImgInput","isTextChanged","changeTextFlag","handleTitleChange","handleEditorChange","editor","handleButtonChange","getTinymce","activeEditor","execCommand","handleSelectChange","handleCheckBoxChange","filePickerCb","callback","meta","filetype","file","onchange","files","reader","FileReader","onload","readAsDataURL","accept","oldPost","URL","createObjectURL","hidden","apiKey","init","language","min_height","height","max_height","plugins","toolbar","style_formats_merge","style_formats","selector","styles","insertdatetime_formats","image_advtab","fullscreen_native","automatic_uploads","image_description","file_picker_types","paste_webkit_styles","paste_retain_style_properties","paste_data_images","paste_as_text","file_picker_callback","content_style","onEditorChange","outline","Profile","imgUrl","changeImgUrl","App","exact","path","ViewPost","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c410005a.chunk.js","sourcesContent":["//export const DOMAIN = \"http://localhost:8080/api/v1/\";\n\nexport const DOMAIN = \"http://10-tka.ru/api/\";\nexport const ADD_USER = \"users/create\"\nexport const LOGIN = \"users/login\";\nexport const LOGOUT = \"users/logout\";\nexport const ME = \"users/me\"\n\nconst BASE_URL = \"/\";\nconst ANY_URL = \"*\";\nconst USER_URL = `${BASE_URL}users`;\nconst TIMETABLE_URL = `${BASE_URL}timetable`;\nconst AUTH_URL = `${BASE_URL}auth`;\nconst PANEL_URL = `${BASE_URL}panel`;\nconst POST_URL = `${BASE_URL}posts`\nconst FEED_URL = `${BASE_URL}feed`\n\nexport const Urls = {\n    root: BASE_URL,\n    user: {\n        slugRoot: USER_URL,\n        slugMe: `${USER_URL}/me`,\n        postCreate: () => `${DOMAIN}users/`,\n        postUpdate: () => `${DOMAIN}users/`,\n        getStudentsAll: () => `${DOMAIN}users/students`,\n        getProfessorsAll: () => `${DOMAIN}users/professors`,\n    },\n    feed: {\n        slugRoot: FEED_URL\n    },\n    timetable: {\n        slugRoot: TIMETABLE_URL,\n        slugEdit: `${TIMETABLE_URL}/edit`,\n        get: (group: string, week: number) => `${DOMAIN}timetable/${group}/${week}`,\n        post: () => `${TIMETABLE_URL}/create`,\n        delete: () => `${TIMETABLE_URL}/`\n    },\n    panel: {\n        slugRoot: PANEL_URL,\n    },\n    post: {\n        slugRoot: POST_URL,\n        slugCreate: `${POST_URL}/create`\n    },\n    discipline: {\n        getAll: () => `${DOMAIN}disciplines/all`\n    },\n    auth: AUTH_URL,\n    notFound: ANY_URL,\n}","import {Redirect, Route, useHistory} from \"react-router-dom\";\nimport {DOMAIN, ME, Urls} from \"@config/urls\"\nimport React, {useEffect} from \"react\";\nimport {makeGet} from \"@utils/network\";\nimport {DefaultCheckLogin} from \"../pages/Authorization\";\n\ntype Props = {\n    component: any;\n    path: string;\n    exact?: boolean;\n}\n\nexport const PrivateRoute: React.FC<Props> = ({component: Component, ...rest}) => {\n    // const history = useHistory()\n    //\n    // useEffect(() => {\n    //     const ServerCheckLogin = async () => {\n    //         return makeGet(`${DOMAIN}${ME}`);\n    //     }\n    //\n    //     ServerCheckLogin().then((r) => {\n    //         if (r.status !== 200) {\n    //             localStorage.setItem(\"loginTime\", \"\");\n    //             history.push(Urls.auth)\n    //         }\n    //     }).catch(() => {\n    //         localStorage.setItem(\"loginTime\", \"\");\n    //         history.push(Urls.auth)\n    //     })\n    // }, [history, history.location.pathname])\n\n    //const authed = DefaultCheckLogin();\n    const authed = true;\n\n    return (\n        <Route {...rest}\n               render={props => authed ?\n                   props.location.pathname === \"/\" ?\n                       <Redirect to={{\n                           pathname: Urls.feed.slugRoot,\n                           state: {from: props.location}\n                       }}\n                       /> :\n                       (<Component {...props} />) :\n                   <Redirect to={{\n                       pathname: Urls.auth,\n                       state: {from: props.location}\n                   }}\n                   />\n               }\n        />\n    )\n}","export const DEFAULT_SESSION_TIME = 3 * 24 * 60 * 60 * 1000; // 3 days in ms\nexport const PROTECTED_SESSION_TIME = 2 * 3600; // 2 hours in sec\nexport const ERROR_SERVER = \"Внутренняя ошибка сервера, попробуйте позже!\";\nexport const SERVER_UNAVAILABLE = \"Связь с сервером потеряна!\";\nexport const ERROR_AUTHORIZATION = \"Неверное имя пользователя или пароль!\";\nexport const PASSWORD_MAX_LENGTH = 35;\nexport const PASSWORD_MIN_LENGTH = 5;\nexport const EMPTY_EMAIL_FIELD = \"Email не может быть пустым!\";\nexport const EMPTY_PASSWORD_FIELD = \"Пароль не может быть пустым!\";\nexport const ERROR_EMAIL_FIELD = \"Некорректный email!\";\nexport const ERROR_PASSWORD_FIELD = `Длина пароля должна быть от ${PASSWORD_MIN_LENGTH} до ${PASSWORD_MAX_LENGTH} символов!`;\n\nexport const USER_TYPE_STUDENT = \"student\";\nexport const USER_TYPE_PROFESSOR = \"professor\";\nexport const USER_TYPE_ADMIN = \"admin\";\nexport const USER_TYPE_METHODIST = \"methodist\";\nexport const USER_TYPE_GUEST = \"guest\";","import React, {useEffect, useState, useCallback} from \"react\";\n\nimport {PROTECTED_SESSION_TIME} from \"../../pages/Authorization/config\";\n\nconst secondsToTime = (s: number) => {\n    const h = Math.trunc(s / 3600);\n    const m = Math.trunc(s / 60 - 60 * h);\n    s = s - 3600 * h - 60 * m\n    return {\n        h: h,\n        m: m,\n        s: s\n    };\n}\n\ntype Props = {\n    id?: string,\n    onZero?: () => void,\n    size: { sm?: boolean, xs?: boolean, lg?: boolean }\n}\n\nconst Timer: React.FC<Props> = ({id, onZero, size}) => {\n\n    const [time, changeTime] = useState({time: secondsToTime(PROTECTED_SESSION_TIME), seconds: PROTECTED_SESSION_TIME});\n    const [isActive, setActive] = useState(true);\n\n    const OnStopCallback = useCallback(\n        () => {\n            if (onZero) {\n                onZero();\n            }\n        },\n        [onZero],\n    );\n\n    const getSize = () => {\n        if (size.xs) {\n            return \"0.7rem\";\n        }\n        return size.lg ? \"1.2rem\" : \"0.9rem\";\n    }\n\n    useEffect(() => {\n        let timer = 0;\n        if (isActive) {\n            timer = window.setInterval(() => {\n                let seconds = time.seconds - 1;\n                changeTime({\n                    time: secondsToTime(seconds),\n                    seconds: seconds,\n                });\n                if (seconds === 0 && isActive) {\n                    setActive(!isActive);\n                    OnStopCallback();\n                }\n            }, 1000);\n        } else if (!isActive && time.seconds !== 0) {\n            window.clearInterval(timer);\n        }\n        return () => window.clearInterval(timer);\n    }, [isActive, time.seconds, OnStopCallback]);\n\n    return (\n        <div key={id} className=\"d-flex\">\n            <div style={{fontSize: getSize()}}>\n                {time.time.h}:{time.time.m}:{time.time.s}\n            </div>\n        </div>\n    );\n}\n\nexport default Timer;\n\n","export default __webpack_public_path__ + \"static/media/student.72adb2a4.png\";","export default __webpack_public_path__ + \"static/media/admin.bb4d60bc.jpg\";","import React from \"react\";\nimport \"./AuthError.scss\"\n\ntype Props = {\n    msg: string\n}\n\nconst AuthError:React.FC<Props> = ({msg}) => {\n    return (\n        <div className=\"Auth__error\">{msg}</div>\n    )\n}\n\nexport default React.memo(AuthError);","import axios from \"axios\";\naxios.defaults.withCredentials = true;\n\nexport const makeGet = async (url: string) => {\n    return axios({\n        method: \"get\",\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n        withCredentials: true,\n        url: url\n    });\n};\n\nexport const makePost = async (url: string, data: any) => {\n    return axios({\n        method: \"post\",\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n\n        url: url,\n        data: data,\n        withCredentials: true\n    });\n};\n\nexport const makePut = async (url: string, data: any) => {\n    return axios({\n        method: \"put\",\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n\n        url: url,\n        data: data,\n        withCredentials: true\n    });\n};\n\nexport const makeDelete = async (url: string, data: any) => {\n    return axios({\n        method: \"delete\",\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        },\n        url: url,\n        data: data,\n        withCredentials: true\n    });\n};\n\n","import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\"\n\nimport {DOMAIN, LOGIN, LOGOUT, Urls} from \"@config/urls\";\n\nimport {\n    DEFAULT_SESSION_TIME,\n    EMPTY_EMAIL_FIELD,\n    EMPTY_PASSWORD_FIELD,\n    ERROR_AUTHORIZATION,\n    ERROR_EMAIL_FIELD,\n    ERROR_PASSWORD_FIELD,\n    ERROR_SERVER,\n    PASSWORD_MAX_LENGTH,\n    PASSWORD_MIN_LENGTH,\n    SERVER_UNAVAILABLE\n} from \"./config\";\nimport \"./Authorization.scss\"\nimport AuthError from \"@components/AuthError\";\nimport {makePost} from \"@utils/network\";\nimport {addUsers} from \"@utils/addUsers\";\n\nexport const Logout = (history: any) => {\n    makePost(`${DOMAIN}${LOGOUT}`, null).then((r) => {\n    }).catch((e) => {\n    })\n    localStorage.clear()\n    history.replace(Urls.auth);\n}\n\nexport const DefaultCheckLogin = () => {\n    const lastAuthTime = parseInt(localStorage.getItem(\"loginTime\") as string);\n    return lastAuthTime != null && Date.now() - lastAuthTime < DEFAULT_SESSION_TIME;\n}\n\nconst Auth = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailDirty, setEmailDirty] = useState(false);\n    const [passwordDirty, setPasswordDirty] = useState(false);\n    const [emailError, setEmailError] = useState(EMPTY_EMAIL_FIELD);\n    const [passwordError, setPasswordError] = useState(EMPTY_PASSWORD_FIELD);\n    const [formValid, setFormValid] = useState(false);\n    const [userError, setUserError] = useState('');\n    const [checkBox, setCheckBox] = useState(false);\n    const history = useHistory();\n\n    const CheckBoxHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        setCheckBox(e.target.checked);\n    }, []);\n\n    const HandleSubmit = React.useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n\n        //addUsers();\n\n        localStorage.setItem(\"loginTime\", Date.now().toString());\n        localStorage.setItem(\"user_role\", 'admin')\n        const userGroup = \"IU10-83\";\n        history.push(Urls.feed.slugRoot);\n\n        // makePost(`${DOMAIN}${LOGIN}`, {\n        //     email: email,\n        //     password: password,\n        //     checkbox: checkBox\n        // }).then((response) => {\n        //     localStorage.setItem(\"loginTime\", Date.now().toString());\n        //     const userGroup = response.data.user.group;\n        //     //console.log(\"User = \", response.data.user)\n        //     if (userGroup !== \"\") {\n        //         localStorage.setItem(\"user_group\", response.data.user.group)\n        //     }\n        //     localStorage.setItem(\"user_role\", response.data.user.role)\n        //     history.push(Urls.timetable.slugRoot);\n        // }).catch((error) => {\n        //     if (error.response) {\n        //         if (error.response.status === 404) {\n        //             setUserError(ERROR_AUTHORIZATION);\n        //         } else {\n        //             setUserError(ERROR_SERVER);\n        //         }\n        //     } else {\n        //         setUserError(SERVER_UNAVAILABLE);\n        //     }\n        //     return;\n        // });\n\n    }, [email, password, checkBox, history]);\n\n    useEffect(() => {\n        if (emailError || passwordError) {\n            setFormValid(false);\n        } else {\n            setFormValid(true);\n        }\n    }, [emailError, passwordError]);\n\n    const EmailHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const emailNew = e.target.value;\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!re.test(String(emailNew).toLowerCase())) {\n            setEmailError(ERROR_EMAIL_FIELD)\n        } else setEmailError('');\n        setEmail(emailNew);\n    }, []);\n\n    const PasswordHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const passwdNew = e.target.value;\n        if (passwdNew.length < PASSWORD_MIN_LENGTH || passwdNew.length > PASSWORD_MAX_LENGTH) {\n            setPasswordError(ERROR_PASSWORD_FIELD);\n            if (!passwdNew.length) {\n                setPasswordError(EMPTY_PASSWORD_FIELD);\n            }\n        } else setPasswordError('');\n        setPassword(passwdNew);\n    }, []);\n\n    const BlurHandler = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.name === \"email\") {\n            setEmailDirty(true);\n        } else {\n            setPasswordDirty(true);\n        }\n        setUserError(\"\");\n    }, []);\n\n    return (\n        // <div className=\"Auth h-100 d-flex justify-content-center align-items-center text-center\">\n        //     <form className=\"Auth__form\">\n        //         <div className=\"form-group\">\n        //             <div>Email</div>\n        //             {(emailDirty && emailError) && <AuthError msg={emailError}/>}\n        //             <input onChange={EmailHandler} value={email} name=\"email\" onBlur={BlurHandler}\n        //                    type=\"text\" className=\"form-control\"\n        //                    placeholder=\"Введите email\"/>\n        //         </div>\n        //         <div className=\"form-group\">\n        //             <div>Пароль</div>\n        //             {(passwordDirty && passwordError) && <AuthError msg={passwordError}/>}\n        //             <input onChange={PasswordHandler} value={password} name=\"password\"\n        //                    onBlur={BlurHandler} type=\"password\" className=\"form-control Auth__pass\"\n        //                    placeholder=\"Введите пароль\"/>\n        //         </div>\n        //         <div className=\"form-check\">\n        //             <input onChange={CheckBoxHandler} type=\"checkbox\" className=\"form-check-input\"/>\n        //             <div className=\"form-check-div\">Запомнить</div>\n        //         </div>\n        //         {(userError) && <AuthError msg={userError}/>}\n        //         <button disabled={!formValid} onClick={HandleSubmit} type=\"submit\" className=\"btn Auth__btn mt-2\">Войти\n        //         </button>\n        //     </form>\n        // </div>\n        <div className=\"container-fluid d-flex h-100 justify-content-center align-items-center text-center\">\n            <div className=\"row bg-white shadow-sm m-1\">\n                <div className=\"col border rounded p-4\">\n                    <form>\n                        <div className=\"form-group\">\n                            <div>Email</div>\n                            {(emailDirty && emailError) && <AuthError msg={emailError}/>}\n                            <input onBlur={BlurHandler} onChange={EmailHandler} value={email}\n                                   type=\"text\" className=\"form-control\" name=\"email\" placeholder=\"Введите email...\"/>\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">Мы не передаем ваши данные\n                                сторонним источникам</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <div>Пароль</div>\n                            {(passwordDirty && passwordError) && <AuthError msg={passwordError}/>}\n                            <input onBlur={BlurHandler} onChange={PasswordHandler} value={password}\n                                   className=\"form-control\" type=\"password\"\n                                   placeholder=\"Введите пароль...\"/>\n                        </div>\n                        <div className=\"d-flex flex-row justify-content-center align-items-center\">\n                            <input className=\"mr-1\" onChange={CheckBoxHandler} type=\"checkbox\"/>\n                            <div>Запомнить меня</div>\n                        </div>\n                        <div className=\"p-0\"> {(userError) && <AuthError msg={userError}/>}</div>\n                        <div className=\"p-3\">\n                            <button disabled={!formValid} onClick={HandleSubmit} type=\"submit\"\n                                    className=\"btn Auth__btn mt-2\">Войти\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Auth;\n","import React, {useCallback, useState} from \"react\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {\n    MDBNavbar,\n    MDBNavbarBrand,\n    MDBNavbarNav,\n    MDBNavItem,\n    MDBNavLink,\n    MDBNavbarToggler,\n    MDBCollapse,\n    MDBDropdown,\n    MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem\n} from \"mdbreact\";\n\nimport Timer from \"@components/Timer\";\nimport Avatar from \"@media/student.png\"\nimport Admin from \"@media/admin.jpg\"\nimport {Urls} from \"@config/urls\";\n\nimport {Logout} from \"../../pages/Authorization\";\nimport \"./Header.scss\"\n\n\nconst Header = () => {\n    const location = useLocation();\n    const history = useHistory();\n\n    const Rendered = () => ([Urls.feed.slugRoot, Urls.timetable.slugEdit,\n        Urls.panel.slugRoot, Urls.root,\n        Urls.post.slugRoot, Urls.post.slugCreate,\n        Urls.user.slugMe, Urls.user.slugRoot].includes(location.pathname))\n\n    const [collapseIsOpen, collapseChange] = useState(false);\n\n    const toggleCollapse = useCallback(() => {\n        collapseChange(!collapseIsOpen);\n    }, [collapseIsOpen]);\n\n    return (\n        <div>\n            {Rendered() ? <div className=\"navbar__main\">\n                <MDBNavbar className=\"mb-3\" color=\"teal lighten-2\" dark expand=\"md\">\n                    <MDBNavbarBrand>\n                        <strong className=\"white-text\">10-tka</strong>\n                    </MDBNavbarBrand>\n                    <MDBNavbarToggler onClick={toggleCollapse}/>\n                    <MDBCollapse id=\"navbarCollapse3\" isOpen={collapseIsOpen} navbar>\n                        <MDBNavbarNav left className=\"col-lg-8\">\n                            <MDBNavItem active>\n                                <MDBNavLink className=\"navbar__main_link\" to={Urls.feed.slugRoot}>\n                                    <div className=\"navbar__main_strong\">Главная</div>\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem active>\n                                <MDBNavLink className=\"navbar__main_link\" to={Urls.post.slugCreate}>\n                                    <div className=\"navbar__main_strong\">Создать пост</div>\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem active>\n                                <MDBNavLink className=\"navbar__main_link\" to={Urls.timetable.slugEdit}>\n                                    <div className=\"navbar__main_strong\">Конструктор расписания</div>\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            {localStorage.getItem(\"user_role\") === \"admin\" ?\n                                <MDBNavItem active>\n                                    <MDBNavLink className=\"navbar__main_link\" to={Urls.panel.slugRoot}>\n                                        <div className=\"navbar__main_strong\">Пользователи</div>\n                                    </MDBNavLink>\n                                </MDBNavItem> : null}\n\n                            <MDBNavItem active className=\"d-md-none\">\n                                <button type=\"button\"\n                                        className=\"link-logout\"\n                                        onClick={() => {\n                                            Logout(history)\n                                        }}>\n                                    <div className=\"navbar__main_strong\">Выход</div>\n                                </button>\n                            </MDBNavItem>\n                        </MDBNavbarNav>\n                        <MDBNavbarNav right className=\" d-none d-md-block\">\n                            <div\n                                className=\"d-flex align-items-center justify-content-end flex-nowrap\">\n                                <MDBNavItem>\n                                    <img className=\"navbar__avatar\"\n                                         src={localStorage.getItem(\"user_role\") === \"admin\" ? Admin : Avatar}\n                                         alt=\"oops\"/>\n                                </MDBNavItem>\n                                <MDBNavItem\n                                    className=\"container-fluid flex-column justify-content-center text-center\">\n                                    <span\n                                        className=\"main__title\">{localStorage.getItem(\"user_role\") === \"admin\" ? \"Admin\" : \"Вася Пупкин\"}</span>\n                                    <div className=\"text-black-50\">\n                                        <Timer size={{sm: true}} onZero={() => {\n                                            Logout(history);\n                                        }}/>\n                                    </div>\n                                </MDBNavItem>\n                                <MDBNavItem>\n                                    <MDBDropdown>\n                                        <MDBDropdownToggle className=\"dropdown-toggle navbar__dropdown\">\n                                        </MDBDropdownToggle>\n                                        <MDBDropdownMenu right basic>\n                                            <MDBDropdownItem onClick={() => {\n                                                history.push(Urls.user.slugMe)\n                                            }}>Профиль</MDBDropdownItem>\n                                            <MDBDropdownItem onClick={() => {\n                                                Logout(history);\n                                            }}>Выйти</MDBDropdownItem>\n                                        </MDBDropdownMenu>\n                                    </MDBDropdown>\n                                </MDBNavItem>\n                            </div>\n                        </MDBNavbarNav>\n                    </MDBCollapse>\n                </MDBNavbar>\n            </div> : null}\n        </div>\n    );\n}\n\nexport default Header;\n\n","import React from \"react\";\nimport \"./ButtonTimetable.scss\"\n\ntype Props = {\n    onChange: (id: string) => void,\n    disabled?: boolean\n    btn: {id: string, title?: string, color: string }\n}\n\nconst ButtonTimetable: React.FC<Props> = ({onChange, disabled, btn, children}) => {\n    return (\n        <button className=\"btn-custom\" type=\"button\"\n                disabled={disabled}\n                onClick={() => {\n                    onChange(btn.id)\n                }}\n                style={{background: btn ? btn.color : \"\"}}>\n            {btn.title ? <span className=\"btn-custom__title\">{btn.title}</span> : children}\n        </button>\n    )\n}\n\nexport default ButtonTimetable;","import React from \"react\";\nimport \"./HiddenInput.scss\"\n\ntype Props = {\n    value: string,\n    onChange: (s: string, id: string) => void,\n    id: string,\n    disabled?: boolean,\n    title?: string\n    buttonId?: string,\n}\n\nconst HiddenInput: React.FC<Props> = ({id, disabled, title, onChange, value}) => {\n    const handleChange = React.useCallback((e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        if (onChange) {\n            onChange(e.target.value, id);\n        }\n    }, [onChange, id]);\n\n    return (\n        <div key={id} className=\"hidden d-flex flex-column text-black-50\">\n            <textarea value={value} onChange={handleChange} placeholder={title && !disabled ? title : \"\"}\n                      className=\"hidden__text\"\n                      style={{display: disabled ? \"none\" : \"\"}}/>\n        </div>\n    )\n}\n\nexport default HiddenInput;","import React from \"react\";\nimport {MDBCollapse} from \"mdbreact\";\nimport ButtonTimetable from \"@components/ButtonTimetable\";\nimport HiddenInput from \"@components/HiddenInput\";\n\nimport \"./ButtonWithInput.scss\"\n\ntype Props = {\n    onInputChange?: (id: string, value: string) => void;\n    onAreaChange?: (id: string, value: string) => void;\n    onBtnChange?: () => void,\n    inputs?: { maxInputLength: number, maxAreaLength: number }\n    btn: { id: string, title?: string, color: string, disableInputs?: boolean }\n}\n\nconst ButtonWithInput: React.FC<Props> = ({btn, onBtnChange, onInputChange, onAreaChange, inputs}) => {\n    const [activeInput, setActive] = React.useState(true);\n    const [areaValue, changeValueArea] = React.useState(\"\");\n    const [inputValue, changeValueInput] = React.useState(\"\");\n    const [collapseOpen, changeCollapse] = React.useState(false)\n\n    const changeAreaValue = React.useCallback((value: string) => {\n        if (inputs && inputs.maxAreaLength < value.length) {\n            return;\n        }\n        changeValueArea(value);\n        if (onAreaChange) {\n            onAreaChange(btn.id, value);\n        }\n    }, [onAreaChange, btn.id, inputs])\n\n    const setActiveElement = React.useCallback(() => {\n        if (btn.disableInputs) {\n            changeCollapse(!collapseOpen)\n        } else {\n            setActive(!activeInput);\n            if (onBtnChange) {\n                onBtnChange();\n            }\n        }\n    }, [onBtnChange, activeInput, collapseOpen, btn.disableInputs])\n\n    const changeInputValue = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value;\n        if (inputs && inputs.maxInputLength < value.length) {\n            return;\n        }\n        changeValueInput(value);\n        if (onInputChange) {\n            onInputChange(btn.id, value);\n        }\n    }, [onInputChange, btn.id, inputs]);\n\n\n    const buttonFields = React.useCallback(() => (\n        <div className=\"d-flex flex-row align-content-center\">\n            <div className=\"m-1\">\n                <HiddenInput id={btn.id} value={areaValue}\n                             onChange={changeAreaValue} disabled={activeInput} title={\"Дисциплина\"}/>\n            </div>\n            <div className=\"m-1\">\n                <input id={btn.id} value={inputValue} className=\"btn-mdb-input\" type=\"text\" placeholder=\"Ауд\"\n                       style={{display: activeInput ? \"none\" : \"\"}}\n                       onChange={(e) => {\n                           changeInputValue(e)\n                       }}/>\n            </div>\n        </div>\n    ), [btn.id, inputValue, changeInputValue, changeAreaValue, areaValue, activeInput]);\n\n    const buttonCollapse = React.useCallback(() => (\n        <MDBCollapse id={btn.id} isOpen={collapseOpen}>\n            <span className=\"collapse-text m-1\">\n                Используйте для создания пропусков между парами.\n            </span>\n        </MDBCollapse>\n    ), [btn.id, collapseOpen]);\n\n    return (\n        <div className=\"d-flex flex-row align-content-center\">\n            <ButtonTimetable disabled={false}\n                             onChange={setActiveElement}\n                             btn={btn}/>\n            {!btn.disableInputs ? buttonFields() : buttonCollapse()}\n        </div>\n    )\n}\n\nexport default ButtonWithInput;","import React, {useCallback, useEffect, useState} from \"react\";\nimport \"./InputNumber.scss\"\n\ntype Props = {\n    disabled?: boolean;\n    placeholder: string;\n    id: string;\n    min: number;\n    max: number;\n    onChange?: (id: string, value: number) => void;\n    defaultValue: number\n}\n\nconst InputNumber: React.FC<Props> = ({id, min, max, onChange, placeholder, disabled, defaultValue}) => {\n    const [value, setValue] = useState(\"\");\n\n    useEffect(() => {\n        setValue(defaultValue.toString());\n    }, [defaultValue])\n\n    const changeInputValue = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value;\n        let intValue = parseInt(value);\n        if (intValue < min || intValue > max) {\n            return;\n        }\n        setValue(value);\n        if (onChange) {\n            onChange(id, intValue);\n        }\n    }, [onChange, id, min, max])\n\n    return (\n        <input disabled={disabled} type=\"number\" placeholder={placeholder} className=\"input-number\"\n               value={value}\n               onChange={changeInputValue}/>\n    );\n\n}\n\nexport default InputNumber;","export const Week = [\n    {id: 0, day: \"Пн\", date: \"\"},\n    {id: 1, day: \"Вт\", date: \"\"},\n    {id: 2, day: \"Ср\", date: \"\"},\n    {id: 3, day: \"Чт\", date: \"\"},\n    {id: 4, day: \"Пт\", date: \"\"},\n    {id: 5, day: \"Сб\", date: \"\"},\n    {id: 6, day: \"Вс\", date: \"\"},\n]\n\nexport const buttonsContent = [\n    {id: \"btn-0\", title: \"СЕМ\", color: \"#348A3D\"},\n    {id: \"btn-1\", title: \"ЛЕК\", color: \"#62d76e\"},\n    {id: \"btn-2\", title: \"ЛР\", color: \"#8ebd3b\"},\n    {id: \"btn-3\", title: \"ДЗ\", color: \"#e8722c\"},\n    {id: \"btn-4\", title: \"РК\", color: \"#eabf19\"},\n    {id: \"btn-5\", title: \"КОНС\", color: \"#5c70d9\"},\n    {id: \"btn-6\", title: \"ЭКЗ\", color: \"#ce2c2c\"},\n    {id: \"btn-7\", title: \"СР\", color: \"#3ca490\", disableInputs: true},\n]\n\nexport const LessonsTime = [\n    \"8:30 - 10:05\",\n    \"10:15 - 11:50\",\n    \"12:00 - 13:35\",\n    \"13:50 - 15:25\",\n    \"15:40 - 17:15\",\n    \"17:25 - 19:00\",\n    \"19:10 - 20:45\",\n]\n\n//blog\nexport const TAG_GENERAL = \"Общие вопросы\";\nexport const TAG_IMPORTANT = \"Важное\";\nexport const TAG_EDUCATIONAL = \"Учебная работа\";","import React from \"react\";\nimport {v4 as uuid} from \"uuid\";\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport {faCogs} from \"@fortawesome/free-solid-svg-icons/faCogs\";\n\nimport ButtonTimetable from \"@components/ButtonTimetable\";\nimport InputNumber from \"@components/InputNumber\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Week} from \"@config/config\";\nimport \"./AdminPanel.scss\"\n\n\ntype Props = {\n    dayIdx: number;\n    changeDay: () => void;\n    getPanelData: (group: number, semester: number, week: number, weekType: string) => void;\n}\n\nconst AdminPanel: React.FC<Props> = ({dayIdx, changeDay, getPanelData}) => {\n    const [panelLabel, setLabel] = React.useState(\"\")\n    const [groupInfo, setInfo] = React.useState({week: 0, group: 0, semester: 0, weekType: \"Чс\"})\n\n    const changeLabelInfo = React.useCallback((id, value) => {\n        const newInfo = groupInfo;\n        switch (id) {\n            case \"input-for-week\":\n                newInfo.week = value;\n                break;\n            case \"input-for-group\":\n                newInfo.group = value;\n                break;\n            case \"input-for-sem\":\n                newInfo.semester = value;\n                break;\n            case \"input-for-week-type\":\n                newInfo.weekType = value;\n                break;\n        }\n        /*if (newInfo.week !== 0 && !isNaN(newInfo.week) && newInfo.weekType !== \"\" && newInfo.semester !== 0\n            && !isNaN(newInfo.semester) && newInfo.group !== 0 && !isNaN(newInfo.group)) {\n            const newLabel = `${newInfo.week}-я Неделя, ${newInfo.weekType}, Группа ИУ10-${newInfo.semester}${newInfo.group}`\n            setLabel(newLabel)\n            getPanelData(newInfo.group, newInfo.semester, newInfo.week, newInfo.weekType)*/\n        if (newInfo.weekType !== \"\" && newInfo.semester !== 0\n            && !isNaN(newInfo.semester) && newInfo.group !== 0 && !isNaN(newInfo.group)) {\n            const newLabel = `Группа ИУ10-${newInfo.semester}${newInfo.group}, ${newInfo.weekType}`\n            setLabel(newLabel)\n            getPanelData(newInfo.group, newInfo.semester, newInfo.week, newInfo.weekType)\n        } else {\n            setLabel(\"\");\n        }\n        setInfo(newInfo);\n    }, [groupInfo, getPanelData])\n\n    return (\n        <div>\n            <div className=\"panel d-flex flex-column\">\n                <div className=\"panel__header\">\n                    Настройка параметров учебной группы\n                    <FontAwesomeIcon icon={faCogs} size={\"lg\"}\n                                     color={\"white\"}/>\n                </div>\n                <div className=\"panel__body\">\n                    {dayIdx !== -1 ?\n                        <ButtonTimetable\n                            onChange={changeDay}\n                            disabled={false}\n                            btn={{id: uuid(), color: \"#4fbfb4\"}}\n                        >\n                            <div className=\"d-flex flex-row flex-nowrap justify-content-around\">\n                                <FontAwesomeIcon icon={faPlus} size={\"lg\"}\n                                                 color={\"white\"}/>\n                                <span\n                                    className=\"DAndD-container__header__text_white\">{Week[dayIdx].day}</span>\n                            </div>\n                        </ButtonTimetable>\n                        : null}\n                    <div className=\"ml-1\">\n                        <InputNumber disabled placeholder=\"Неделя\" id=\"input-for-week\" min={1} max={17}\n                                     onChange={changeLabelInfo} defaultValue={NaN}/>\n                    </div>\n                    <InputNumber placeholder=\"Группа\" id=\"input-for-group\" min={1} max={5} onChange={changeLabelInfo}\n                                 defaultValue={NaN}/>\n                    <InputNumber placeholder=\"Семестр\" id=\"input-for-sem\" min={1} max={12} onChange={changeLabelInfo}\n                                 defaultValue={NaN}/>\n                    <div className=\"mr-1\">\n                        <select id=\"input-for-week-type\" defaultValue={\"1\"} className=\"panel__select\" onChange={(e) => {\n                            changeLabelInfo(\"input-for-week-type\", e.target.value)\n                        }}>\n                            <option value=\"Чс\">Чс</option>\n                            <option value=\"Зн\">Зн</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"panel__footer\">\n                    {panelLabel}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AdminPanel;","import React from \"react\";\nimport {buttonsContent} from \"@config/config\";\n\nimport \"./ButtonsLogo.scss\"\n\nconst classNames = require('classnames/bind');\n\nconst styles = {\n    btn: 'btn-logo',\n    btnXs: 'btn-logo__xs',\n};\n\nconst btnLogo = classNames.bind(styles);\n\ntype Props = {\n    idx: number;\n    xs?: boolean;\n}\n\nconst ButtonsLogo: React.FC<Props> = ({idx, xs}) => {\n    let className = btnLogo({\n        btn: true,\n        btnXs: !!xs\n    });\n\n    return (\n        <div className={className} style={{backgroundColor: buttonsContent[idx].color}}>\n            {buttonsContent[idx].title}\n        </div>\n    )\n}\n\nexport default React.memo(ButtonsLogo);","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faMapMarkerAlt} from \"@fortawesome/free-solid-svg-icons/faMapMarkerAlt\";\n\nimport ButtonsLogo from \"@components/ButtonsLogo/ButtonsLogo\";\n\ntype Props = {\n    isEmpty: boolean;\n    sourceIdx: number;\n    header: string;\n    footer: string;\n}\n\nconst DroppableElem: React.FC<Props> = ({sourceIdx, header, footer, isEmpty}) => {\n    return (\n        <div>\n            <div className=\"DAndD-item__header\">\n                <div className=\"DAndD-item__header__text\">{header}</div>\n            </div>\n            <div className=\"d-flex flex-row justify-content-between\">\n                <ButtonsLogo idx={sourceIdx}/>\n                {isEmpty ? null :\n                    <div className=\"DAndD-item__footer mt-1 mr-1\">\n                        <FontAwesomeIcon className=\"mr-1\" icon={faMapMarkerAlt}/>\n                        <span>{footer}</span>\n                    </div>}\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(DroppableElem);","import React from \"react\";\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBars} from \"@fortawesome/free-solid-svg-icons/faBars\";\n\ntype Props = {\n    droppableColumn: Array<{ props: { btn: { id: string } } }>\n}\n\nconst DraggableArea: React.FC<Props> = ({droppableColumn}) => {\n    return (\n        <Droppable droppableId=\"items\" isDropDisabled={true}>\n            {(provided) => (\n                <div>\n                    <div className=\"DAndD-draggable\"  ref={provided.innerRef}>\n                        {\n                            droppableColumn.map((item, index) => {\n                                return (\n                                    <Draggable\n                                        key={item.props.btn.id}\n                                        draggableId={item.props.btn.id}\n                                        index={index}\n                                    >\n                                        {(provided, snapshot) => (\n                                            <React.Fragment>\n                                                <div ref={provided.innerRef}\n                                                     {...provided.draggableProps}\n                                                     {...provided.dragHandleProps}\n                                                >\n                                                    <div className=\"DAndD-items__column\" style={{\n                                                        border: snapshot.isDragging ?\n                                                            \"1px dashed #000\" : \"1px solid #ddd\"\n                                                    }}>\n                                                        <FontAwesomeIcon className=\"DAndD-items__column__drop ml-1\"\n                                                                         icon={faBars} size={\"lg\"}\n                                                                         style={{color: snapshot.isDragging ? \"#35b8b8\" : \"\"}}/>\n                                                        {item}\n                                                    </div>\n                                                </div>\n                                                {snapshot.isDragging && (\n                                                    <div className=\"DAndD-items__column__dragged\">\n                                                        <div style={{opacity: \"0\"}}>\n                                                            {item}\n                                                        </div>\n                                                    </div>)\n                                                }\n                                            </React.Fragment>\n                                        )}\n                                    </Draggable>)\n                            })}\n                        {provided.placeholder}\n                    </div>\n                </div>\n            )}\n        </Droppable>\n    )\n}\n\nexport default DraggableArea;","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons/faTimes\";\nimport \"./IconPlus.scss\"\n\nconst IconPlus = () => (\n    <FontAwesomeIcon className=\"icon-remover\" icon={faTimes} size={\"sm\"}\n                     color={\"#e85050\"}/>\n)\n\nexport default React.memo(IconPlus);","import React from \"react\";\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faClock} from \"@fortawesome/free-solid-svg-icons/faClock\";\n\nimport {LessonsTime, Week} from \"@config/config\";\nimport IconPlus from \"@components/IconPlus/IconPlus\";\n\ntype Props = {\n    Lists: object;\n    removeList: (id: number) => void;\n    removeItem: (list: string, id: number) => void;\n}\n\nconst DroppableArea: React.FC<Props> = ({Lists, removeList, removeItem}) => {\n    return (\n        <div>\n            {Object.keys(Lists).map((list) => (\n                <Droppable key={list} droppableId={list}>\n                    {(provided, snapshot) => (\n                        <div className=\"DAndD-container\" ref={provided.innerRef}\n                             style={{border: snapshot.isDraggingOver ? \"3px dashed #000\" : \"3px solid #ddd\"}}>\n                            <div\n                                className=\"DAndD-container__header d-flex flex-row justify-content-between\">\n                                <span className=\"DAndD-container__header__text\">{Week[list].day}</span>\n                                <button type=\"button\"\n                                        className=\"link-button\"\n                                        onClick={() => {\n                                            removeList(parseInt(list))\n                                        }}\n                                        style={{display: Lists[list].length ? \"none\" : \"\"}}\n                                >\n                                    <IconPlus/>\n                                </button>\n                            </div>\n                            <div className=\"DAndD__content\">\n                                {Lists[list].length ? Lists[list].map((item: { id: string }, index: number) => (\n                                        <Draggable key={item.id} draggableId={item.id}\n                                                   index={index}>\n                                            {(provided, snapshot) => (\n                                                <div ref={provided.innerRef} {...provided.draggableProps}\n                                                     style={\n                                                         provided.draggableProps.style\n                                                     }>\n                                                    <div className=\"DAndD-item\"\n                                                         style={{border: snapshot.isDragging ? \"1px dashed #000\" : \"1px solid #ddd\"}} {...provided.dragHandleProps}>\n                                                        <button type=\"button\"\n                                                                className=\"link-button DAndD-item__close icon-red\"\n                                                                onClick={() => {\n                                                                    removeItem(list, index)\n                                                                }}>\n                                                            <IconPlus/>\n                                                        </button>\n                                                        {item}\n                                                        <div\n                                                            className=\"DAndD-item__lessons d-flex flex-row align-items-center\">\n                                                            <FontAwesomeIcon icon={faClock}/>\n                                                            <div className=\"ml-1\">{LessonsTime[index]}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            )}\n                                        </Draggable>)) :\n                                    <div className=\"text-center\">\n                                        <span className=\"text-black-50\">Drop items here</span>\n                                    </div>\n                                }\n                                {provided.placeholder}\n                            </div>\n                        </div>\n                    )}\n                </Droppable>\n            ))}\n        </div>\n    )\n}\n\nexport default DroppableArea;","import {Week} from \"@config/config\";\nimport {v4 as uuid} from \"uuid\";\nimport {makeDelete, makePost} from \"@utils/network\";\nimport {Urls} from \"@config/urls\";\n\nexport const Labels = {'sem': 0, 'lek': 1, 'lr': 2, 'dz': 3, 'rk': 4, 'cons': 5, 'exam': 6, 'free': 7}\nconst LabelsInt = {0: 'sem', 1: 'lek', 2: 'lr', 3: 'dz', 4: 'rk', 5: 'cons', 6: 'exam', 7: 'free'}\n\n\nexport const findNextDay = (Lists: object) => {\n    let idx = 0;\n    const isFull = !Week.some((item) => {\n        if (!Lists[item.id]) {\n            idx = item.id;\n            return true;\n        }\n        return false;\n    })\n    return isFull ? -1 : idx;\n}\n\nexport const reorder = (list: Array<object>, startIndex: number, endIndex: number) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\nexport const copy = (item: object, destination: Array<object>, droppableIndex: number) => {\n    const destClone = Array.from(destination);\n    destClone.splice(droppableIndex, 0, {...item, id: uuid()});\n\n    return destClone;\n};\n\nexport const checkFill = (header_text: string, footer_text: string): boolean => {\n    return header_text?.length >= 2 && footer_text?.length >= 2\n}\n\nexport const getDayDataFromList = (day: Array<{ id: string, props: any }>) => {\n    return day.map((lesson, index) => ({\n        lesson_order: index + 1,\n        lesson_id: lesson.id,\n        title: lesson.props.header,\n        auditorium: lesson.props.footer,\n        lesson_type: LabelsInt[lesson.props.sourceIdx]\n    }))\n}\n\nconst changeWeekType = (week_type: string) => {\n    return week_type === \"Чc\" ? \"numerator\" : \"denominator\";\n}\n\nconst postWeekData = (week: object, showLabel: (err: any) => void) => {\n    makePost(Urls.timetable.post(), week).then((resp) => {\n        console.log(resp)\n        if (resp.status !== 201) {\n            showLabel({content: \"Не удалось сохранить изменения!\", success: false})\n        } else {\n            showLabel({content: \"Успех!\", success: true})\n        }\n    }).catch(() => {\n        showLabel({content: \"Не удалось сохранить изменения!\", success: false})\n    })\n}\n\nexport const saveTimetable = (Lists: object, deleted: { lessons: Array<string> }, panelData: { group: number; semester: number; week: number; weekType: string },\n                              showLabel: any) => {\n    const week = {\n        group: `IU10-${panelData.semester}${panelData.group}`,\n        week_type: changeWeekType(panelData.weekType),\n        week_number: panelData.weekType === \"Чс\" ? 1 : 2,\n        days: <Array<object>>[]\n    }\n    const idx = Object.keys(Lists)\n    idx.forEach((i) => {\n        week.days.push(\n            {\n                day_order: parseInt(i) + 1,\n                lessons: getDayDataFromList(Lists[i])\n            }\n        )\n    });\n    showLabel({content: \"\", success: false});\n\n    console.log(week)\n\n\n    makeDelete(Urls.timetable.delete(), {lessons_ids: deleted.lessons}).then((response) => {\n        if (response.status === 200) {\n            postWeekData(week, showLabel)\n        } else {\n            showLabel({content: \"Ошибка при удалении записей!\", success: false})\n        }\n    }).catch((err) => {\n        if (err.response && err.response.status === 403) {\n            showLabel({content: \"Недостаточно прав для изменения!\", success: false})\n        } else {\n            showLabel({content: \"Ошибка при удалении записей!\", success: false})\n        }\n    })\n}\n","import React from \"react\";\nimport \"./Card.scss\";\n\ntype Props = {\n    id: number;\n    title: string;\n    currentDay: number;\n    items: Array<React.ReactNode>;\n}\n\nconst Card: React.FC<Props> = ({id, title, currentDay, items}) => {\n    return (\n        <div className=\"Home-Card\">\n            <h5 className=\"Home-Card__title\"\n                style={{backgroundColor: id < currentDay ? \"#b4bdbd\" : \"#5bc3c3\"}}>{title}</h5>\n            <div className=\"list-group Home-Card__list\">\n                {\n                    items?.length > 0 ?\n                    items.map((elem, index) => (\n                    <div key={index} className=\"list-group-item Home-Card-list__item\">{elem}</div>)\n                    ) : <div className=\"list_empty\">Нет расписания</div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faClock} from \"@fortawesome/free-solid-svg-icons/faClock\"\nimport {faMapMarkerAlt} from \"@fortawesome/free-solid-svg-icons/faMapMarkerAlt\"\n\nimport \"./Lesson.scss\";\n\ntype Props = {\n    title: string;\n    time: string,\n    auditorium: string,\n    isEmpty: boolean\n}\n\nconst Lesson: React.FC<Props> = ({title, time, auditorium, isEmpty, children}) => {\n    return (\n        <div className=\"Lesson\">\n            <div className=\"Lesson__header\">\n                <div className=\"Lesson__header__text\">\n                    {title}</div>\n            </div>\n            {children}\n            <div className=\"Lesson__param d-flex flex-row \">\n                {isEmpty ? null :\n                    <div className=\"d-flex flex-row align-items-center\">\n                        <FontAwesomeIcon icon={faMapMarkerAlt}/>\n                        <div className=\"ml-1\">{auditorium}</div>\n                    </div>}\n\n                <div className=\"d-flex justify-content-end w-100\">\n                    <div className=\"d-flex flex-row align-items-center\">\n                        <FontAwesomeIcon icon={faClock}/>\n                        <div className=\"ml-1\">{time}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Lesson;","import React from \"react\";\nimport {TAG_EDUCATIONAL, TAG_GENERAL, TAG_IMPORTANT} from \"@config/config\";\nimport \"./blogTag.scss\"\n\nconst BlogTag = () => {\n    return (\n        <div>\n            <button type=\"button\" className=\"btn-tag btn-tag-general\">#{TAG_GENERAL}</button>\n            <button type=\"button\" className=\"btn-tag btn-tag-important\">#{TAG_IMPORTANT}</button>\n            <button type=\"button\" className=\"btn-tag btn-tag-educational\">#{TAG_EDUCATIONAL}</button>\n        </div>\n    )\n}\n\nexport default BlogTag;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport IconPlus from \"@components/IconPlus\";\n\ntype Props = {\n    key: string | number,\n    text: string,\n    answers?: [],\n    commentAuthor?: string,\n    viewByAuthor?: boolean,\n    onDeleteClick?: () => void\n}\n\nconst CommentView: React.FC<Props> = ({key, text, answers, commentAuthor, viewByAuthor, onDeleteClick}) => (\n    <div className=\"post-comment\" key={key}>\n        <div className=\"card-header d-flex flex-row justify-content-between\">\n            <div>\n                <img className=\"post-comment-avatar\" src=\"/public/img/hamster.webp\"\n                     alt=\"img not loaded\"/>\n                <Link className=\"ml-3\" to=\"/profile\">Вася Пупкин</Link>\n            </div>\n            <span>\n                <p className=\"date-time grey-text\"> 25 января 2021 г. в 12:58</p>\n                {viewByAuthor ?\n                    <button type=\"button\"\n                            className=\"link-button\"\n                            onClick={onDeleteClick}\n                    >\n                        <IconPlus/>\n                    </button>\n                    : null}\n            </span>\n        </div>\n        <div className=\"card-body\">\n            <div>{text ? <p>{text}</p> :\n                <p>Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n            }</div>\n        </div>\n    </div>\n)\n\nexport default CommentView;","import React from \"react\";\nimport \"./ViewPost.scss\"\nimport BlogTag from \"@components/Blog/blogTag\";\nimport {Link} from \"react-router-dom\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport PostComment from \"@components/PostCommentView\";\nimport Hamster from \"@media/hamster.webp\"\nimport CommentView from \"@components/PostCommentView\";\n\nlet answersExample = [\n    {text: \"first answer text\"},\n    {text: \"second answer text\"},\n    {text: \"third answer text\"},\n    {text: \"forth answer text\"},\n]\n\n\ntype Props = {\n    id: string | number;\n}\n\ntype Comment = {\n    commentId: string | number,\n    author: string,\n    authorAvatarPath?: string,\n    text: string,\n    date?: string\n}\n\nexport const PostView: React.FC<Props> = ({id}) => {\n    const commentsForm = [\"Комментарий\", \"Комментария\", \"Комментариев\"];\n    const history = useHistory();\n    const location = useLocation();\n    const [isOutputFull, changeOutputFull] = React.useState(location.pathname.includes('/posts'));\n    const [isLiked, changeLiked] = React.useState(false);\n    const [likesCnt, changeLikesCnt] = React.useState(0);\n    const [commentsCnt, changeCommentsCnt] = React.useState(0);\n    const [comments, changeComments] = React.useState<Array<Comment>>([])\n\n\n    const declOfNum = (n: number, text_forms: Array<string>) => {\n        n = Math.abs(n) % 100;\n        let n1 = n % 10;\n        if (n > 10 && n < 20) {\n            return text_forms[2];\n        }\n        if (n1 > 1 && n1 < 5) {\n            return text_forms[1];\n        }\n        if (n1 === 1) {\n            return text_forms[0];\n        }\n        return text_forms[2];\n    }\n\n    const commentsRedirectHandler = () => {\n        if (!isOutputFull) {\n            history.push(`/posts/${id}`)\n        }\n        document.getElementById(\"go-to-comments\")?.click()\n    }\n\n    const addComment = () => {\n        const oldComments = [...comments];\n\n        oldComments.push({authorAvatarPath: \"\", date: \"\", commentId: oldComments.length, text: \"aaaa\", author: \"Vasya\"})\n        changeComments(oldComments);\n    }\n\n    const deleteComment = (commentId: string | number) => {\n        const oldComments = [...comments];\n        const idx = oldComments.findIndex((c) => (c.commentId === commentId))\n        oldComments.splice(idx, 1);\n        changeComments(oldComments);\n    }\n\n\n    return (\n        <div\n            className=\"container-fluid flex-column h-100 justify-content-center align-items-center col-md-10 col-xl-7\">\n            <div className=\"card\">\n                <div className=\"card-header d-flex flex-row justify-content-between\">\n                    {isOutputFull ?\n                        <p className=\"post-title\">Вручение сертификатов семестровых курсов 28 января</p>\n                        :\n                        <Link to={`/posts/${id}`}><p className=\"post-title\">Вручение сертификатов семестровых\n                            курсов 28 января</p></Link>\n                    }\n\n                    <p className=\"date-time grey-text\"> 25 января 2021 г. в 12:58</p>\n                </div>\n                <div className=\"card-body\">\n                    <BlogTag/>\n                    <p className=\"mt-3\">\n                        &nbsp;Поздравляю студентов&nbsp; с окончанием семестровых курсов в\n                        Технопарке!<br/>Мы\n                        знаем, что это было непросто, но все вы – молодцы!&nbsp;<br/>Каждого&nbsp; успешного\n                        выпускника&nbsp; ждет сертификат, который в будущем можно использовать в резюме или\n                        портфолио.<br/><br/>Даже в режиме удаленки&nbsp;мы не просто отправляем сертификаты,\n                        а вручаем их. Поэтому приглашаем всех выпускников на онлайн вручение, которое\n                        начнется в четверг, <strong>28 января, в 16:00.</strong><br/><br/><strong>Программа\n                        мероприятия:</strong><br/>- приветственные слова руководителя департамента\n                        образования Mail.ru Group Анны Степановой,&nbsp;<br/>- специальный гость и\n                        интерактивная часть,&nbsp;<br/>- Андрей Викторович Пролетарский и\n                        преподаватели&nbsp; Технопарка скажут пару напутственных слов,&nbsp;<br/>-&nbsp; я\n                        расскажу вам о тех курсах, которые&nbsp; мы запланировали в семестре Весна -\n                        2021&nbsp;<br/>- вручение сертификатов.<br/><br/>Важно! Бумажную версию сертификата\n                        каждый из вас сможет получить в феврале. Вся информация о выдаче будет на\n                        портале.<br/><br/><strong>Ссылка на подключение:</strong><br/>Мероприятие будет\n                        закрытым и пройдет в любимом Зуме. Ссылка на комнату&nbsp;<a\n                        href=\"https://mailru.zoom.us/j/92900161419?pwd=UFZzbnl3TkgzbXRiWVBaU2txMEtrdz09\"\n                        target=\"_blank\"\n                        rel=\"noopener\">https://mailru.zoom.us/j/92900161419?pwd=UFZzbnl3TkgzbXRiWVBaU2txMEtrdz09</a><br/><br/>Мы\n                        пришлем напоминание и ссылку еще раз в день вручения за пару часов до старта.&nbsp;\n                        <br/>Увидимся!&nbsp;&nbsp;</p>\n                    <footer className=\"grey-text\">\n                        <hr/>\n                        <div className=\"d-flex flex-nowrap flex-row justify-content-between\">\n                            <div className=\"ml-0\">\n                                <img className=\"post-avatar-sm\" src=\"/public/img/hamster.webp\"\n                                     alt=\"img not loaded\"/>\n                                <Link to=\"/profile\">\n                                    Сергей Козлачков\n                                </Link>\n                            </div>\n\n                            <div className=\"mr-3\">\n                                <a id=\"go-to-comments\" className=\"href-transparent\" href=\"#comments\"/>\n                                <button className=\"btn-post-social\" onClick={commentsRedirectHandler}>\n                                    <i className=\"fa fa-comments fa-lg post-icon-comment\"/></button>\n                                {'5 комментов'}\n                                <button className=\"btn-post-social btn-post-like\"\n                                        onClick={() => {\n                                            changeLiked(!isLiked);\n                                            changeLikesCnt(isLiked ? likesCnt - 1 : likesCnt + 1);\n                                        }}><i\n                                    className=\"fa fa-heart fa-lg post-icon-like\"\n                                    style={isLiked ? {color: \"#ff4a4a\"} : undefined}/></button>\n                                {likesCnt}\n                            </div>\n                        </div>\n                    </footer>\n                </div>\n            </div>\n\n            {isOutputFull ? <div>\n                <button className=\"btn btn-success btn-sm\" onClick={addComment}>comments+\n                </button>\n                <h1 className=\"m-3\">\n                    <span>{commentsCnt} </span>{declOfNum(commentsCnt, commentsForm)}\n                </h1>\n\n                <div data-spy=\"scroll\" data-offset=\"0\">\n                    <div id=\"comments\">\n                        {comments.map((comment) => (\n                            <CommentView key={comment.commentId} text={comment.text} viewByAuthor={true}\n                                         onDeleteClick={() => (deleteComment(comment.commentId))}/>\n                        ))}\n                    </div>\n                    {<div className=\"text-center\">\n                        <button className=\"btn-post-social btn-post-comment blue-color\"\n                                onClick={() => {\n                                    alert(1)\n                                }}>Показать следующие комментарии\n                        </button>\n                    </div>}\n                </div>\n            </div> : null}\n        </div>\n    )\n}\n\nexport default PostView;","import React from \"react\";\nimport { MDBPagination, MDBPageItem, MDBPageNav, MDBCol, MDBRow } from \"mdbreact\";\n\nconst Pagination = () => {\n    return (\n        <MDBRow>\n            <MDBCol>\n                <MDBPagination color=\"teal\" circle>\n                    <MDBPageItem disabled>\n                        <MDBPageNav className=\"page-link\">\n                            <span>First</span>\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem disabled>\n                        <MDBPageNav className=\"page-link\" aria-label=\"Previous\">\n                            <span aria-hidden=\"true\">&laquo;</span>\n                            <span className=\"sr-only\">Previous</span>\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem active>\n                        <MDBPageNav className=\"page-link\">\n                            1 <span className=\"sr-only\">(current)</span>\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem>\n                        <MDBPageNav className=\"page-link\">\n                            2\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem>\n                        <MDBPageNav className=\"page-link\">\n                            3\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem>\n                        <MDBPageNav className=\"page-link\">\n                            4\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem>\n                        <MDBPageNav className=\"page-link\">\n                            5\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem>\n                        <MDBPageNav className=\"page-link\">\n                            &raquo;\n                        </MDBPageNav>\n                    </MDBPageItem>\n                    <MDBPageItem>\n                        <MDBPageNav className=\"page-link\">\n                            Last\n                        </MDBPageNav>\n                    </MDBPageItem>\n                </MDBPagination>\n            </MDBCol>\n        </MDBRow>\n    )\n}\n\nexport default Pagination;\n\n","import React, {Component} from 'react';\nimport ViewPost from \"@components/ViewPost\";\nimport Pagination from \"@components/Pagination\";\n\n\nconst PostsList = () => {\n\n    const [posts, changePosts] = React.useState<Array<React.ReactNode>>([])\n\n    React.useEffect(() => {\n        const oldPosts = [];\n        for (let i = 1; i < 4; ++i) {\n            oldPosts.push(<div className=\"m-3\" key={i}><ViewPost id={i}/></div>)\n        }\n        changePosts(oldPosts)\n    }, [posts]);\n\n    return (\n        <div>\n            <div className=\"container-fluid\">\n                {posts}\n                <div className=\"d-flex flex-center\">\n                    <Pagination/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PostsList;","import React, {useEffect, useState} from \"react\";\n\nimport Card from \"@components/Card\";\nimport Lesson from \"@components/Lesson\";\nimport ButtonsLogo from \"@components/ButtonsLogo\";\n\nimport \"./Home.scss\"\nimport {makeGet} from \"@utils/network\";\nimport {Urls} from \"@config/urls\";\nimport {Labels} from \"@components/DragAndDrop/config\";\nimport {LessonsTime} from \"@config/config\";\nimport PostsList from \"../PostsList\";\n\nconst getWeekData = (): [number, string[], string] => {\n    const date = new Date();\n    const today = date.getDate();\n    const weekDay = (date.getDay() + 6) % 7;\n    const weekAgo = today - weekDay;\n\n    const monthIdx = date.getMonth();\n    const days = [\"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\", \"Вс\"];\n    const months = [\"января\", \"февраля\", \"март\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"]\n    const weekType = Math.floor(weekAgo / 7) % 2 === 0 ? \"Зн\" : \"Чс\"\n    return [weekDay, days.map((day, index) => (`${day}, ${weekAgo + index} ${months[monthIdx]}`)), weekType]\n}\n\ntype LessonType = {\n    lesson_id: string;\n    title: string;\n    lesson_type: string;\n    auditorium: string;\n}\n\nconst prepareLessons = (lessons: Array<LessonType>) => {\n    return lessons.map((lesson, index) => (\n        <Lesson title={lesson.title} auditorium={lesson.auditorium} time={LessonsTime[index]}\n                isEmpty={lesson.lesson_type === \"free\"}>\n            <ButtonsLogo xs idx={Labels[lesson.lesson_type]}/>\n        </Lesson>\n    ))\n};\n\nconst prepareWeek = (weekDays: Array<{ day_id: string, day_order: number, lessons: Array<LessonType> }>) => {\n    const newList: Array<Array<React.ReactNode>> = [];\n\n    weekDays.forEach((day, index) => {\n        if (day.lessons) {\n            newList[index] = prepareLessons(day.lessons)\n        } else {\n            newList[index] = []\n        }\n    })\n    return newList\n}\n\nexport const getWeekType = (week_type: string) => {\n    return week_type === \"Чс\" ? 1 : 2\n}\n\nconst Home = () => {\n    const [weekInfo, changeWeekInfo] = useState<{ weekDay: number, days: string[] }>({weekDay: 0, days: []})\n    const [orgInfo, changeOrgInfo] = useState({group: \"\", week_number: 0, week_type: \"Чс\"})\n    const [lessons, changeLessons] = useState<Array<Array<React.ReactNode>>>([])\n\n    useEffect(() => {\n\n        const [weekDay, weekData, weekType] = getWeekData();\n\n        changeWeekInfo({weekDay: weekDay, days: weekData});\n        const userGroup = localStorage.getItem(\"user_group\");\n        if (userGroup) {\n            makeGet(Urls.timetable.get(userGroup, getWeekType(weekType))).then((response) => {\n                console.log(\"Ответ сервера успешно получен!\");\n                const week = response.data.week;\n                const savedWeek = prepareWeek(week.days);\n                changeLessons(savedWeek);\n                changeOrgInfo({group: week.group, week_type: weekType, week_number: week.week_number});\n\n            }).catch((error) => {\n                console.log(error);\n                return;\n            });\n        }\n\n    }, [])\n\n    return (\n        <div>\n            <div className=\"d-flex flex-row justify-content-center align-items-center\">\n                {orgInfo.group !== \"\" ?\n                    <div\n                        className=\"timetable__title\">{`Информация о группе ${orgInfo.group}, ${orgInfo.week_type}`}</div> :\n                    <div className=\"timetable__title\">Вы не прикреплены ни к одной из учебных групп</div>\n                }\n            </div>\n            {orgInfo.group !== \"\" ?\n                <div className=\"Home d-flex flex-row flex-nowrap\">\n                    {weekInfo.days.map((date, index) => (\n                        <Card id={index} key={index} currentDay={weekInfo.weekDay} title={date} items={lessons[index]}/>\n                    ))}\n                </div> : null\n            }\n            <PostsList/>\n        </div>\n    )\n}\n\nexport default React.memo(Home);","import React, {useState} from \"react\";\nimport \"./StatusLabel.scss\"\n\ntype Props = {\n    info: { content: string, success: boolean };\n}\n\n\nconst StatusLabel: React.FC<Props> = ({info}) => {\n    const [shown, isShown] = useState(false);\n\n    React.useEffect(() => {\n        const timer = setTimeout(() => {\n            isShown(false);\n        }, 2000);\n        isShown(info.content !== \"\");\n        return () => clearTimeout(timer);\n    }, [info])\n\n\n    return (\n        <div className=\"StatusLabel\"\n             style={{backgroundColor: info.success ? \"rgba(23,127,19,0.7)\" : \"rgba(175, 37, 37, 0.9)\"}}>\n            {shown ? <div className=\"StatusLabel__content text-center\">\n                <div>{info.content}</div>\n            </div> : null}\n        </div>\n    )\n}\n\nexport default StatusLabel","import React, {useEffect, useState} from \"react\";\nimport {v4 as uuid} from \"uuid\";\nimport {DragDropContext, DropResult} from \"react-beautiful-dnd\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faSave} from \"@fortawesome/free-solid-svg-icons/faSave\";\n\nimport ButtonTimetable from \"@components/ButtonTimetable\";\nimport ButtonWithInput from \"@components/ButtonWithInput\";\nimport AdminPanel from \"@components/AdminPanel\";\n\nimport {buttonsContent, Week} from \"@config/config\";\nimport DroppableElem from \"@components/DragAndDrop/DroppableElem\";\nimport DraggableArea from \"@components/DragAndDrop/DraggableArea\";\nimport DroppableArea from \"@components/DragAndDrop/DroppableArea\";\nimport {findNextDay, copy, reorder, checkFill, saveTimetable, Labels} from \"@components/DragAndDrop/config\";\n\nimport \"./DAndD.scss\"\nimport {makeGet} from \"@utils/network\";\nimport {Urls} from \"@config/urls\";\nimport {getWeekType} from \"../../pages/Home/Home\";\nimport StatusLabel from \"@components/StatusLabel\";\n\ntype Lesson = {\n    lesson_id: string;\n    title: string;\n    lesson_type: string;\n    auditorium: string;\n}\n\nconst prepareLessons = (lessons: Array<Lesson>) => {\n    return lessons.map((lesson) => ({\n        id: lesson.lesson_id, ...<DroppableElem isEmpty={lesson.lesson_type === \"free\"}\n                                                sourceIdx={Labels[lesson.lesson_type]}\n                                                header={lesson.title}\n                                                footer={lesson.auditorium}/>\n    }))\n}\n\n\nconst prepareWeek = (weekDays: Array<{ day_id: string, day_order: number, lessons: Array<Lesson> }>) => {\n    const newList = {};\n\n    weekDays.forEach((day, index) => {\n        if (day.lessons) {\n            newList[index] = prepareLessons(day.lessons)\n        }\n    })\n    return newList\n}\n\n\nconst DragAndDrop = () => {\n    const [err, showLabel] = useState({content: \"\", success: false});\n    const [deleted, changeDeleted] = useState<{ lessons: Array<string> }>({lessons: []});\n    const [Lists, changeList] = useState<object>({0: []});\n    const [dayIdx, changeDayIdx] = useState<number>(1);\n    const [areasValue, setAreasValues] = useState({});\n    const [inputsValue, setValues] = useState({});\n    const [panelData, setPanelData] = useState({group: 0, semester: 0, week: 0, weekType: \"\"});\n\n    useEffect(() => {\n        if (panelData.semester !== 0) {\n            showLabel({content:\"\", success: false})\n            makeGet(Urls.timetable.get(`IU10-${panelData.semester}${panelData.group}`, getWeekType(panelData.weekType))).then((response) => {\n                const savedWeek = prepareWeek(response.data.week.days);\n                changeList(savedWeek);\n                changeDayIdx(findNextDay(savedWeek));\n            }).catch((error) => {\n                showLabel({content:\"Указанная группа не найдена\", success: false})\n                changeList({0: []});\n                return;\n            });\n        }\n    }, [panelData])\n\n    const changeArea = React.useCallback((id: string, value: string) => {\n        const oldAreas = areasValue;\n        oldAreas[id] = value;\n        setAreasValues(oldAreas);\n    }, [areasValue]);\n\n    const changeInput = React.useCallback((id: string, value: string) => {\n        const oldInputs = inputsValue;\n        oldInputs[id] = value;\n        setValues(oldInputs);\n    }, [inputsValue]);\n\n    const droppableColumn = React.useMemo(() => (buttonsContent.map((btn, idx) => (\n        <ButtonWithInput key={idx} btn={btn} onAreaChange={changeArea} onInputChange={changeInput}\n                         inputs={{maxInputLength: 5, maxAreaLength: 50}}/>\n    ))), [changeInput, changeArea])\n\n    const onDragEnd = React.useCallback((result: DropResult) => {\n        const {source, destination} = result;\n\n        if (!destination) {\n            return;\n        }\n        const newList = {...Lists};\n\n        switch (source.droppableId) {\n            case destination.droppableId:\n                if (destination.droppableId === \"items\") {\n                    return;\n                }\n                newList[destination.droppableId] = reorder(\n                    Lists[source.droppableId],\n                    source.index,\n                    destination.index\n                )\n                break;\n            case \"items\":\n                if (Lists[destination.droppableId].length === Week.length) {\n                    return;\n                }\n                const title = areasValue[buttonsContent[source.index].id];\n                const auditorium = inputsValue[buttonsContent[source.index].id];\n                const isEmpty = buttonsContent[source.index].title === \"СР\";\n\n                if (!isEmpty && !checkFill(title, auditorium)) {\n                    return;\n                }\n\n                const draggable = <DroppableElem isEmpty={isEmpty} sourceIdx={source.index}\n                                                 header={isEmpty ? \"Самостоятельная работа\" : title}\n                                                 footer={auditorium}/>\n\n                newList[destination.droppableId] = copy(\n                    draggable,\n                    newList[destination.droppableId],\n                    destination.index\n                )\n                break;\n        }\n        changeList(newList);\n        console.log(Lists)\n    }, [Lists, areasValue, inputsValue]);\n\n    const AddList = React.useCallback(() => {\n        const idx = findNextDay(Lists)\n        if (idx === -1) {\n            return;\n        }\n        const newList = {...Lists};\n        newList[idx] = [];\n        changeList(newList);\n        changeDayIdx(findNextDay(newList));\n    }, [Lists]);\n\n    const removeItem = React.useCallback((list: string, index: number) => {\n        const newList = {...Lists};\n        const id: string = newList[list][index].id\n        const deletedLessons: Array<string> = [...deleted.lessons]\n        deletedLessons.push(id)\n        changeDeleted({lessons: deletedLessons});\n        newList[list].splice(index, 1);\n        changeList(newList);\n    }, [Lists, deleted.lessons]);\n\n    const removeList = React.useCallback((list: number) => {\n        const newList = {...Lists};\n        delete newList[list];\n        changeList(newList);\n        const idx = findNextDay(newList);\n        changeDayIdx(idx);\n    }, [Lists]);\n\n    const getPanelDataHandler = React.useCallback((group: number, semester: number, week: number, weekType: string) => {\n        setPanelData({group: group, semester: semester, week: week, weekType: weekType})\n    }, [])\n\n    return (\n        <div className=\"DAndD text-center\">\n            <StatusLabel info={err}/>\n            <div className=\"d-flex flex-row\">\n                <div className=\"d-none d-sm-block col-sm-4 col-md-5\"/>\n                <div className=\"col-md-7\">\n                    <AdminPanel dayIdx={dayIdx} changeDay={AddList} getPanelData={getPanelDataHandler}/>\n                </div>\n            </div>\n            <hr/>\n            <div className=\"d-flex flex-row\">\n                <DragDropContext onDragEnd={onDragEnd}>\n                    <div className=\"col-5\">\n                        <DroppableArea Lists={Lists} removeList={removeList} removeItem={removeItem}/>\n                    </div>\n                    <div className=\"col-7 d-flex\">\n                        <DraggableArea droppableColumn={droppableColumn}/>\n                    </div>\n                </DragDropContext>\n            </div>\n            <hr/>\n            <div>\n                <ButtonTimetable\n                    onChange={() => {\n                        saveTimetable(Lists, deleted, panelData, showLabel)\n                        //history.replace(Urls.timetable.byId)\n                    }}\n                    btn={{id: uuid(), color: \"#36a51c\"}}\n                >\n                    <div className=\"d-flex flex-row align-items-center justify-content-around\">\n                        <FontAwesomeIcon icon={faSave} size={\"sm\"}/>\n                        <div>Save</div>\n                    </div>\n                </ButtonTimetable>\n            </div>\n\n        </div>\n    );\n}\n\nexport default DragAndDrop;\n","import React from \"react\";\n\nimport DragAndDrop from \"@components/DragAndDrop\";\nimport \"./timetable.scss\"\n\n\n\nconst Timetable = () => {\n    return (\n       <div>\n           <DragAndDrop/>\n       </div>\n    )\n\n}\n\nexport default React.memo(Timetable);\n","import React from \"react\";\nimport {useHistory} from \"react-router-dom\";\n\nimport {Urls} from \"@config/urls\";\n\nimport \"./NotFound.scss\"\n\nconst NotFoundPage = () => {\n    const history = useHistory()\n\n    const homeRedirectHandler = React.useCallback(() => {\n        history.replace(Urls.timetable.slugRoot)\n    }, [history]);\n\n    return (\n        <div className=\"notFound\">\n            <div className=\"overlay\"/>\n            <div className=\"terminal\">\n                <h1>Error <span className=\"errCode\">404</span></h1>\n                <p className=\"output\">The page you are looking for might have been removed, had its name changed or is\n                    temporarily unavailable.</p>\n                <p className=\"output\">Please try to\n                    <button type=\"button\"\n                            className=\"link-button notFound__back\"\n                            onClick={history.goBack}>\n                        go back</button> or\n                    <button type=\"button\"\n                            className=\"link-button notFound__back\"\n                            onClick={homeRedirectHandler}>\n                        return to the homepage</button>.\n                </p>\n                <p className=\"output\">Good luck.</p>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(NotFoundPage);","import React from \"react\";\n\nimport \"./AutoInput.scss\"\n\ntype Props = {\n    id: string;\n    list: Array<string>;\n    className: string;\n    inputProps: any;\n    //autoCompete: boolean,\n}\nconst AutoInput: React.FC<Props> = ({id, className, list,inputProps}) => {\n    React.useEffect(() => {\n        const dataList = document.createElement(\"datalist\");\n        const input = document.getElementById(id);\n        dataList.setAttribute('id', `datalist-${id}`);\n        list.forEach((option) => {\n            const dataListOption = document.createElement(\"option\");\n            dataListOption.value = option;\n            dataList.appendChild(dataListOption);\n        });\n        input?.appendChild(dataList);\n    }, [id, list])\n\n    return (\n        <input className={className} id={id} type=\"text\"\n               list={`datalist-${id}`}\n               {...inputProps}\n        />\n    )\n}\n\nexport default AutoInput;","const MaxDisciplineLength = 25;\nconst MinDisciplineLength = 3;\nconst ERROR_TAG_FIELD = `Длина дисциплины должна быть от ${MinDisciplineLength} до ${MaxDisciplineLength} символов.`;\nconst ERROR_TAG_DUPLICATE = `Введенная дисциплина уже закреплена за преподавателем.`\n\nexport const isTagValid = (tags: Array<{ id: string, content: string }>, tagInfo: { content: string, noFocus: boolean, errMsg: string }) => {\n    const length = tagInfo.content.length;\n\n    tagInfo.errMsg = length < MinDisciplineLength || length > MaxDisciplineLength ? ERROR_TAG_FIELD : \"\";\n    tags.forEach((tag) => {\n        if (tag.content === tagInfo.content) {\n            tagInfo.errMsg = ERROR_TAG_DUPLICATE;\n            return;\n        }\n    })\n    return tagInfo.errMsg;\n}","import React, {useState} from \"react\";\nimport \"./Tags.scss\"\nimport IconPlus from \"@components/IconPlus\";\nimport StatusLabel from \"@components/StatusLabel\";\nimport AuthError from \"@components/AuthError/AuthError\";\nimport AutoInput from \"@components/AutoCompleteInput\";\nimport {isTagValid} from \"@components/Tags/config\";\nimport {v4 as uuid} from \"uuid\";\n\ntype Props = {\n    placeholder?: string;\n    tags: Array<{ id: string, content: string }>;\n    selectList: Array<string>;\n    changeTags: (tagsOld: Array<{ id: string, content: string }>) => void;\n}\n\nconst Tags: React.FC<Props> = ({tags, changeTags, placeholder, selectList}) => {\n    const [tagInput, setTagInp] = React.useState({content: \"\", noFocus: true, errMsg: \"\"})\n    const [label, showLabel] = useState({content: \"\", success: false});\n\n    const handleInput = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const tagInfo = {...tagInput};\n        tagInfo.content = e.target.value;\n\n        tagInfo.errMsg = isTagValid(tags, tagInfo);\n        tagInfo.noFocus = false;\n        setTagInp(tagInfo);\n    }, [tagInput, tags]);\n\n    const handleBlur = React.useCallback(() => {\n        const tagInfo = {...tagInput};\n\n        if (tags.length > 0 && tagInfo.content === \"\") {\n            tagInfo.errMsg = \"\";\n        }\n        tagInfo.noFocus = true;\n        setTagInp(tagInfo);\n    }, [tagInput, tags]);\n\n    const handleDelete = React.useCallback((id: string | number) => {\n        const tagsOld = [...tags];\n        const tagId = tagsOld.findIndex((obj) => (obj.id === id))\n        tagsOld.splice(tagId, 1);\n        changeTags(tagsOld);\n    }, [changeTags, tags]);\n\n\n    const addTag = React.useCallback(() => {\n        const tagsOld = [...tags];\n        const tagOld = {...tagInput};\n        const id = `tag-${uuid()}`;\n\n        if (tagInput.content === '') {\n            showLabel({content: 'Введите дисциплину!', success: false})\n            return;\n        }\n        if (tagInput.errMsg !== \"\") {\n            return;\n        }\n        tagsOld.push({id: id, content: tagInput.content})\n        changeTags(tagsOld)\n        tagOld.content = \"\";\n        setTagInp(tagOld);\n    }, [tags, tagInput, changeTags])\n\n\n    return (\n        <div>\n            <StatusLabel info={label}/>\n            <div className=\"mb-2\">{tags.map((tag) => (\n                <div className=\"tag\" key={tag.id}>\n                    <div className=\"tag-block\">\n                        {tag.content}\n                    </div>\n                    <button className=\"btn-delete\" onClick={() => handleDelete(tag.id)}><IconPlus/></button>\n                </div>\n            ))}</div>\n            {(tagInput.noFocus && tagInput.errMsg) &&\n            <AuthError msg={tagInput.errMsg}/>}\n            <div className=\"d-flex flex-row align-items-center\">\n                <AutoInput id=\"input-auto_tag\" className=\"users-control_input\"\n                           list={selectList}\n                           inputProps={{\n                               value: tagInput.content,\n                               onChange: handleInput,\n                               onBlur: handleBlur,\n                               placeholder: placeholder\n                           }}\n                />\n                <button type=\"button\" onClick={addTag} className=\"tag-btn ml-1\">+</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Tags;","import generatePassword from \"password-generator\";\n\nexport const MIN_SNP = 2;\nexport const MAX_SNP = 20;\nexport const MAX_ABOUT = 256;\nexport const ERROR_NAME_FIELD = `Длина имени от ${MIN_SNP} до ${MAX_SNP} символов, допускаются только русские буквы.`;\nexport const ERROR_SURNAME_FIELD = `Длина фамилии от ${MIN_SNP}  до ${MAX_SNP} символов, допускаются только русские буквы.`;\nexport const ERROR_PATRONYMIC_FIELD = `Длина отчества от ${MIN_SNP}  до ${MAX_SNP} символов, допускаются только русские буквы.`;\nexport const ERROR_PHONE_FIELD = \"Неверный номер телефона.\";\nexport const ERROR_EMAIL_FIELD = \"Неверный email.\";\nexport const ERROR_ABOUT_FIELD = `Максимальная длина описания ${MAX_ABOUT} символов.`;\n\n\nexport const btnPasswd =\n    {\n        id: \"btn-passwd-generator\",\n        title: \"+\",\n        color: \"#4db6ac\",\n        genPasswd: (len: number) => (generatePassword(len, false, /[\\w\\d?-]/))\n    }\n\nexport const saveUser = (userInfo: object, showLabel: any) => {\n    showLabel({content: \"a\", success: false});\n}\n\nexport const checkRussian = (str: string): boolean => {\n    return /^[а-яА-ЯЁё]+$/.test(str);\n}\n\nexport const isValid = (userValid: {}): boolean => {\n    let isFormValid = true;\n    Object.keys(userValid).forEach((key) => {\n        if (userValid[key].msg !== \"\") {\n            isFormValid = false;\n            return false;\n        }\n    })\n    return isFormValid;\n}\n\nexport const notEmpty = (user: {}, canBeEmpty?: Array<string>): boolean => {\n    let noEmptyFields = true;\n    Object.keys(user).forEach((key) => {\n        const field = user[key].toString();\n        if (field === \"\" || field === \"NaN\") {\n            if (canBeEmpty?.includes(key)) {\n            } else {\n                console.log(key)\n                noEmptyFields = false;\n                return false;\n            }\n\n        }\n    })\n    return noEmptyFields;\n}","import React, {useEffect, useState} from 'react';\nimport {MDBDataTable} from 'mdbreact';\n\nimport StatusLabel from \"@components/StatusLabel\";\nimport {makeGet} from \"@utils/network\";\n\nimport \"./userTables.scss\"\nimport {USER_TYPE_PROFESSOR, USER_TYPE_STUDENT} from \"../../Authorization/config\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faRedoAlt} from \"@fortawesome/free-solid-svg-icons/faRedoAlt\";\n\ntype PropsData = {\n    columns: {\n        label?: string;\n        field?: string;\n        sort?: string;\n        width?: number;\n        searchable?: boolean;\n        [rest: string]: any;\n    }[];\n    rows: {\n        clickEvent: () => void;\n        [rest: string]: any;\n    }[];\n}\n\ntype resp = {\n    [rest: string]: any;\n}\n\n\ntype Props = {\n    url: string,\n    id: number,\n    title: string,\n    userType: string,\n    rowClickEvent: (user: resp) => void,\n};\n\nconst UsersTable: React.FC<Props> = ({title, url, userType, rowClickEvent}) => {\n    const [err, showLabel] = useState({content: \"\", success: false});\n    const [needDownload, setDownload] = useState(false);\n    const [timerRedo, setTimerRedo] = useState(-1);\n    const [isReady, setReady] = useState(true);\n    const [data, setData] = useState<PropsData>({columns: [], rows: []});\n\n    const handleClick = React.useCallback(() => {\n        setDownload(true);\n    }, []);\n\n\n    useEffect(() => {\n        if (needDownload && timerRedo !== 0) {\n            setReady(false);\n            const timer = setTimeout(() => {\n                makeGet(url).then((response) => {\n                    if (response && response.data && response.data.users) {\n                        setData(responseConverter(response.data.users, userType));\n                    } else {\n                        showLabel({content: \"Ничего не найдено\", success: false});\n                    }\n                }).catch((error) => {\n                    showLabel({content: \"Ошибка сервера. Попробуйте позже\", success: false});\n                }).finally(() => setReady(true))\n            }, 500);\n            return () => clearTimeout(timer);\n        }\n    }, [needDownload, url, userType, timerRedo]);\n\n    const responseConverter = (data: Array<resp>, userType: string) => {\n        const tableDataTemplate = {\n            columns: [\n                {\n                    label: 'Фамилия',\n                    field: 'surname',\n                    sort: 'asc',\n                },\n                {\n                    label: \"Имя\",\n                    field: 'name',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Отчество',\n                    field: 'patronymic',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc',\n                },\n                {\n                    label: 'Телефон',\n                    field: 'phone',\n                    sort: 'asc',\n                },\n            ],\n            rows: data.map((user) => ({\n                name: user.name,\n                surname: user.surname,\n                patronymic: user.patronymic,\n                email: user.email,\n                phone: user.phone,\n                group: user.student_group,\n                disciplines: user.prof_disciplines_str.substring(1, user.prof_disciplines_str.length - 1).split(\",\").join(\", \"),\n                about: user.about,\n                clickEvent: () => rowClickEvent(user)\n            }))\n        };\n\n        if (userType === USER_TYPE_STUDENT) {\n            tableDataTemplate.columns.push({\n                label: 'Учебная группа',\n                field: 'group',\n                sort: 'asc',\n            });\n        } else if (userType === USER_TYPE_PROFESSOR) {\n            tableDataTemplate.columns.push({\n                label: 'Дисциплины',\n                field: 'disciplines',\n                sort: 'asc',\n            }, {\n                label: 'Описание',\n                field: 'about',\n                sort: 'asc',\n            });\n        }\n        return tableDataTemplate;\n    }\n\n    const handleRedo = React.useCallback(() => {\n        console.log(timerRedo)\n        if (timerRedo > 0) {\n            return;\n        }\n        setTimerRedo(window.setTimeout(() => {\n            setTimerRedo(0);\n        }, 3000));\n\n    }, [timerRedo]);\n\n    return (\n        <div className=\"users-table\">\n            <StatusLabel info={err}/>\n            <div className=\"panel__header\">\n                <div>{title}</div>\n                {needDownload ?\n                    <button type=\"button\" onClick={handleRedo} disabled={timerRedo !== 0 && timerRedo !== -1}\n                            className=\"tag-btn users-table__redo ml-1\">\n                        <FontAwesomeIcon className=\"icon-reload\"\n                                         icon={faRedoAlt}\n                                         size={\"sm\"}\n                                         color={\"#ffffff\"}/>\n                    </button> : null}\n            </div>\n            <div className=\"users-table__body p-1\">\n                {!isReady ?\n                    <i className=\"fa fa-spinner fa-spin fa-2x fa-fw\"/> : null}\n                {isReady && needDownload ? <MDBDataTable\n                    className=\"users-table\"\n                    data={data}\n                    hover\n                    striped\n                    infoLabel={[\"Показано с\", \"по\", \"из\", \"записей\"]}\n                    paginationLabel={[\"Назад\", \"Вперед\"]}\n                    noRecordsFoundLabel=\"Ничего не найдено\"\n                    bordered\n                    responsive\n                    small>\n                </MDBDataTable> : null}\n                {!needDownload ?\n                    <button className=\"btn btn-link btn-download\" onClick={handleClick}>Загрузить данные</button> : null\n                }\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default UsersTable;\n","import React, {useCallback, useState} from \"react\";\nimport \"./UsersControl.scss\"\nimport InputNumber from \"@components/InputNumber\";\nimport Tags from \"@components/Tags\";\nimport StatusLabel from \"@components/StatusLabel\";\nimport {\n    btnPasswd, checkRussian, ERROR_ABOUT_FIELD,\n    ERROR_NAME_FIELD,\n    ERROR_PATRONYMIC_FIELD, ERROR_PHONE_FIELD,\n    ERROR_SURNAME_FIELD, isValid, MAX_ABOUT,\n    MAX_SNP,\n    MIN_SNP, notEmpty,\n} from \"./config\";\n\nimport {makeGet, makePost, makePut} from \"@utils/network\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faRedoAlt} from \"@fortawesome/free-solid-svg-icons/faRedoAlt\";\nimport UsersTable from \"./usersTables\";\nimport {Urls} from \"@config/urls\";\nimport AuthError from \"@components/AuthError/AuthError\";\nimport {ERROR_EMAIL_FIELD, USER_TYPE_METHODIST, USER_TYPE_PROFESSOR, USER_TYPE_STUDENT} from \"../Authorization/config\";\nimport {v4 as uuid} from \"uuid\";\n\ntype UserProps = {\n    id: string,\n    role: string,\n    email: string,\n    phone: string,\n    name: string,\n    surname: string,\n    patronymic: string,\n    password: string,\n    about: string,\n    disciplines: Array<{ id: string, content: string }>,\n    group: number,\n    sem: number\n}\n\nconst InitialUser = {\n    id: \"\",\n    role: USER_TYPE_STUDENT,\n    email: \"\",\n    phone: \"\",\n    name: \"\",\n    surname: \"\",\n    patronymic: \"\",\n    password: \"\",\n    about: \"\",\n    disciplines: [],\n    group: NaN,\n    sem: NaN\n};\n\nconst UsersControl = () => {\n    const [label, showLabel] = useState({content: \"\", success: false});\n    const [inputPasswd, setInputPasswd] = useState<HTMLInputElement | null>(null);\n    const [userInfo, setUserInfo] = useState<UserProps>(InitialUser);\n    const [timer, setTimer] = useState(0);\n    const [disciplines, setDisciplines] = useState<Array<{ discipline_id: number, discipline_content: string, prof_cnt: number }>>([]);\n    const [isDataForEdit, changeEditFlag] = useState({wasEdit: false, oldPhone: \"\", oldEmail: \"\"});\n    const [btnText, setBtnText] = useState(\"Сохранить\")\n\n    const [userValid, setUserValid] = useState({\n        role: {noFocus: false, msg: \"\"},\n        email: {noFocus: false, msg: \"\"},\n        phone: {noFocus: false, msg: \"\"},\n        name: {noFocus: false, msg: \"\"},\n        surname: {noFocus: false, msg: \"\"},\n        patronymic: {noFocus: false, msg: \"\"},\n        password: {noFocus: false, msg: \"\"},\n        about: {noFocus: false, msg: \"\"},\n    });\n\n    React.useEffect(() => {\n        const inputElem = document.getElementById(\"input-password\") as HTMLInputElement;\n\n        setInputPasswd(inputElem);\n        if (userInfo.role === USER_TYPE_PROFESSOR) {\n            makeGet(Urls.discipline.getAll()).then((resp) => {\n                if (resp.status === 200) {\n                    if (resp.data && resp.data.disciplines && resp.data.disciplines.length > 0) {\n                        setDisciplines(resp.data.disciplines)\n                    }\n                }\n            }).catch((err) => {\n                showLabel({content: \"Не удалось загрузить список дисциплин.\", success: false})\n            })\n        }\n    }, [userInfo.role])\n\n    const handleSubmit = useCallback(() => {\n        let fieldsCanBeEmpty = [\"about\", \"sem\", \"group\"];\n\n        if (!isValid(userValid)) {\n            showLabel({content: \"Заполните поля корректно.\", success: false});\n            return;\n        }\n\n        if (userInfo.role === USER_TYPE_METHODIST) {\n            fieldsCanBeEmpty.push(\"disciplines\");\n        } else if (userInfo.role === USER_TYPE_STUDENT) {\n            fieldsCanBeEmpty = [\"about\", \"disciplines\"];\n        }\n\n        if (isDataForEdit.wasEdit) {\n            fieldsCanBeEmpty.push(\"password\");\n        } else {\n            fieldsCanBeEmpty.push(\"id\");\n        }\n\n        console.log(userInfo)\n        if (!notEmpty(userInfo, fieldsCanBeEmpty)) {\n            showLabel({content: \"Заполните пустые поля.\", success: false});\n            return;\n        }\n\n        const newUser = {\n            id: userInfo.id,\n            role: userInfo.role.trim(),\n            password: userInfo.password,\n            name: userInfo.name.trim(),\n            surname: userInfo.surname.trim(),\n            patronymic: userInfo.patronymic.trim(),\n            email: userInfo.email.trim(),\n            phone: userInfo.phone.trim(),\n            student_group: userInfo.role === USER_TYPE_STUDENT ? `${userInfo.sem}${userInfo.group}` : \"\",\n            prof_disciplines: userInfo.disciplines.map((dis) => (dis.content)),\n        }\n\n        console.log(userInfo.id)\n\n        if (isDataForEdit.wasEdit) {\n            makePut(Urls.user.postCreate(), newUser).then((resp) => {\n                if (resp.status === 201) {\n                    showLabel({content: \"Успех!\", success: true});\n                    setUserInfo(InitialUser);\n                    changeEditFlag({wasEdit: false, oldEmail: \"\", oldPhone: \"\"});\n                    setBtnText(\"Сохранить\")\n                }\n            }).catch((err) => {\n                if (err && err.response && err.response.status === 409) {\n                    showLabel({\n                        content: \"Пользователь с данным email или телефоном уже зарегистрирован.\",\n                        success: false\n                    });\n                } else {\n                    showLabel({content: \"Ошибка сервера. Попробуйте позже.\", success: false});\n                }\n            });\n        } else {\n            makePost(Urls.user.postCreate(), newUser).then((resp) => {\n                if (resp.status === 201) {\n                    showLabel({content: \"Успех!\", success: true});\n                    setUserInfo(InitialUser);\n                    changeEditFlag({wasEdit: false, oldEmail: \"\", oldPhone: \"\"});\n                    setBtnText(\"Сохранить\")\n                }\n            }).catch((err) => {\n                if (err && err.response && err.response.status === 409) {\n                    showLabel({\n                        content: \"Пользователь с данным email или телефоном уже зарегистрирован.\",\n                        success: false\n                    });\n                } else {\n                    showLabel({content: \"Ошибка сервера. Попробуйте позже.\", success: false});\n                }\n            });\n        }\n\n\n    }, [userValid, userInfo, isDataForEdit]);\n\n\n    const handlePassword = useCallback(() => {\n        const oldUser = {...userInfo};\n\n        if (inputPasswd) {\n            if (timer !== 0) {\n                clearTimeout(timer);\n            }\n            setTimer(window.setTimeout(() => {\n                inputPasswd.type = \"password\";\n                clearTimeout(timer);\n            }, 2000));\n            inputPasswd.type = \"text\";\n        }\n        oldUser.password = btnPasswd.genPasswd(15);\n        setUserInfo(oldUser);\n    }, [inputPasswd, timer, userInfo]);\n\n    const handleBlur = useCallback(() => {\n        const oldUserValid = {...userValid};\n\n        Object.keys(oldUserValid).forEach((key) => {\n            oldUserValid[key].noFocus = true;\n            if (userInfo[key] === \"\") {\n                oldUserValid[key].msg = \"\";\n            }\n        });\n\n        setUserValid(oldUserValid);\n    }, [userInfo, userValid]);\n\n\n    const handleUserInfo = useCallback((e: React.ChangeEvent<HTMLSelectElement> | React.ChangeEvent<HTMLInputElement>) => {\n        const oldUser = {...userInfo};\n        const oldUserValid = {...userValid};\n        const value = e.target.value;\n        const length = value.length;\n\n        if (isDataForEdit.wasEdit) {\n            setBtnText(\"Редактировать\");\n        } else {\n            setBtnText(\"Сохранить\");\n        }\n\n        switch (e.target.id) {\n            case \"input-name\":\n                oldUserValid.name.msg = length < MIN_SNP || length >= MAX_SNP || !checkRussian(value) ? ERROR_NAME_FIELD : \"\"\n                oldUserValid.name.noFocus = false;\n                oldUser.name = value;\n                break;\n            case \"input-surname\":\n                oldUserValid.surname.msg = length < MIN_SNP || length >= MAX_SNP || !checkRussian(value) ? ERROR_SURNAME_FIELD : \"\"\n                oldUserValid.surname.noFocus = false;\n                oldUser.surname = value;\n                break;\n            case \"input-patronymic\":\n                oldUserValid.patronymic.msg = length < MIN_SNP || length >= MAX_SNP || !checkRussian(value) ? ERROR_PATRONYMIC_FIELD : \"\"\n                oldUserValid.patronymic.noFocus = false;\n                oldUser.patronymic = value;\n                break;\n            case \"input-password\":\n                oldUserValid.patronymic.msg = length < MIN_SNP || length >= MAX_SNP ? ERROR_PATRONYMIC_FIELD : \"\"\n                oldUserValid.patronymic.noFocus = false;\n                oldUser.password = value;\n                break;\n            case \"select-usertype\":\n                oldUser.role = value;\n                break;\n            case \"input-email\":\n                const reEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                oldUserValid.email.msg = !reEmail.test(String(value).toLowerCase()) ? ERROR_EMAIL_FIELD : \"\";\n                oldUserValid.email.noFocus = false;\n                oldUser.email = value;\n                if (value === isDataForEdit.oldEmail) {\n                    setBtnText(\"Редактировать\");\n                } else {\n                    changeEditFlag({wasEdit: false, oldEmail: oldUser.email, oldPhone: isDataForEdit.oldPhone});\n                    setBtnText(\"Сохранить\");\n                }\n                break;\n            case \"input-phone\":\n                const rePhone = /^[\\d]{1} \\([\\d]{2,3}\\) [\\d]{2,3}-[\\d]{2,3}-[\\d]{2,3}$/;\n                oldUserValid.phone.msg = !rePhone.test(String(value).toLowerCase()) ? ERROR_PHONE_FIELD : \"\";\n                oldUserValid.phone.noFocus = false;\n\n                let telephone = \"\";\n                let numbersOld = oldUser.phone.replace(/\\D/g, \"\").split('');\n                const numbersNew = value.replace(/\\D/g, \"\").split('');\n\n                if (numbersOld.length === numbersNew.length && telephone.length < value.length) {\n                    telephone = value;\n                } else {\n                    for (let i = 0; i < 11 && i < numbersNew.length; ++i) {\n                        if (i === 4) {\n                            telephone += \") \";\n                        } else if (i === 7 || i === 9) {\n                            telephone += \"-\";\n                        }\n                        telephone += numbersNew[i];\n                        if (i === 0) {\n                            telephone += \" (\";\n                        }\n                    }\n                }\n\n                oldUser.phone = telephone.trim();\n                if (oldUser.phone === isDataForEdit.oldPhone) {\n                    setBtnText(\"Редактировать\");\n                } else {\n                    changeEditFlag({wasEdit: false, oldEmail: isDataForEdit.oldEmail, oldPhone: oldUser.phone});\n                    setBtnText(\"Сохранить\");\n                }\n                break;\n            case \"input-about\":\n                oldUserValid.about.msg = length > MAX_ABOUT ? ERROR_ABOUT_FIELD + ` (${length})` : \"\";\n                oldUserValid.about.noFocus = false;\n                oldUser.about = value;\n                break;\n        }\n        setUserInfo(oldUser);\n        setUserValid(oldUserValid);\n    }, [isDataForEdit, userInfo, userValid]);\n\n    const handleInputId = useCallback((id: string, value: number) => {\n        const oldUser = {...userInfo};\n\n        if (id === \"input_nmb_sem\") {\n            oldUser.sem = value;\n        } else {\n            oldUser.group = value;\n        }\n        setUserInfo(oldUser);\n    }, [userInfo]);\n\n    const handleUserEdit = React.useCallback((user: any) => {\n        let sem = NaN;\n        let group = NaN;\n        //console.log(user.student_group)\n        if (user.student_group.length === 3) {\n            sem = user.student_group.slice(0, 2);\n            group = user.student_group[2];\n        } else if (user.student_group.length === 2) {\n            sem = user.student_group[0];\n            group = user.student_group[1];\n        }\n\n        const prepareUser = {\n            id: user.id,\n            role: user.role,\n            email: user.email,\n            phone: user.phone,\n            name: user.name,\n            surname: user.surname,\n            patronymic: user.patronymic,\n            password: \"\",\n            about: user.about,\n            disciplines: user.prof_disciplines_str.substring(1, user.prof_disciplines_str.length - 1).split(\",\").map((d: string) => ({\n                id: `tag-${uuid()}`,\n                content: d\n            })),\n            group: group,\n            sem: sem\n        }\n\n        changeEditFlag({wasEdit: true, oldEmail: user.email, oldPhone: user.phone});\n        setBtnText(\"Редактировать\");\n        setUserInfo(prepareUser);\n    }, []);\n\n    const defineRole = () => {\n        if (userInfo.role === USER_TYPE_STUDENT) {\n            return (\n                <div>\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"mr-1\">\n                            <InputNumber placeholder={\"Сем\"} onChange={handleInputId} id={\"input_nmb_sem\"} min={1}\n                                         max={12} defaultValue={userInfo.sem}/>\n                        </div>\n                        <div className=\"ml-1\">\n                            <InputNumber placeholder={\"Группа\"} onChange={handleInputId} id={\"input_nmb_group\"} min={1}\n                                         max={5} defaultValue={userInfo.group}/>\n                        </div>\n                    </div>\n                    {!isNaN(userInfo.sem) && !isNaN(userInfo.group) ?\n                        <div className=\"IU\">{`Группа: ИУ10-${userInfo.sem}${userInfo.group}`}</div> : null}\n                </div>\n            )\n        } else if (userInfo.role === USER_TYPE_PROFESSOR) {\n            return (\n                <div>\n                    <div className=\"users-control_label\">Дисциплина</div>\n                    <Tags tags={userInfo.disciplines}\n                          selectList={disciplines.map(d => (d.discipline_content))}\n                          changeTags={(newTags) => {\n                              const oldInfo = {...userInfo};\n                              oldInfo.disciplines = newTags;\n                              setUserInfo(oldInfo);\n                          }\n                          }/>\n                    {(userValid.about.noFocus && userValid.about.msg) &&\n                    <AuthError msg={userValid.about.msg}/>}\n                    <div className=\"prof-info mt-2\">\n                        <div className=\"users-control_label\">Общая информация</div>\n                        <input id=\"input-about\" className=\"users-control_input\"\n                               onChange={handleUserInfo} onBlur={handleBlur}/>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div>\n            <StatusLabel info={label}/>\n            <div className=\"users\">\n                <div className=\"users-control\">\n                    <div className=\"panel__header\">\n                        Добавление пользователей\n                    </div>\n                    <div className=\"users-control_block\">\n                        <div className=\"mt-1\">\n                            {(userValid.surname.noFocus && userValid.surname.msg) &&\n                            <AuthError msg={userValid.surname.msg}/>}\n                            <div className=\"users-control_label\">Фамилия</div>\n                            <input id=\"input-surname\" className=\"users-control_input\" value={userInfo.surname}\n                                   onChange={handleUserInfo} onBlur={handleBlur}/>\n                        </div>\n                        <div className=\"mt-1\">\n                            {(userValid.name.noFocus && userValid.name.msg) &&\n                            <AuthError msg={userValid.name.msg}/>}\n                            <div className=\"users-control_label\">Имя</div>\n                            <input id=\"input-name\" className=\"users-control_input\" value={userInfo.name}\n                                   onChange={handleUserInfo} onBlur={handleBlur}/>\n                        </div>\n                        <div className=\"mt-1\">\n                            {(userValid.patronymic.noFocus && userValid.patronymic.msg) &&\n                            <AuthError msg={userValid.patronymic.msg}/>}\n                            <div className=\"users-control_label\">Отчество</div>\n                            <input id=\"input-patronymic\" className=\"users-control_input\" value={userInfo.patronymic}\n                                   onChange={handleUserInfo} onBlur={handleBlur}/>\n                        </div>\n                        <div className=\"mt-1\">\n                            {(userValid.phone.noFocus && userValid.phone.msg) &&\n                            <AuthError msg={userValid.phone.msg}/>}\n                            <div className=\"users-control_label\">Телефон</div>\n                            <small className=\"users-control_advice\">Формат: 8 (888) 888-88-88</small>\n                            <input id=\"input-phone\" className=\"users-control_input\" value={userInfo.phone}\n                                   onChange={handleUserInfo} onBlur={handleBlur}/>\n                        </div>\n                        <div className=\"mt-1\">\n                            {(userValid.email.noFocus && userValid.email.msg) &&\n                            <AuthError msg={userValid.email.msg}/>}\n                            <div className=\"users-control_label\">Email</div>\n                            <input id=\"input-email\" className=\"users-control_input\" value={userInfo.email}\n                                   onChange={handleUserInfo} onBlur={handleBlur}/>\n                        </div>\n                        <div className=\"mt-1\">\n                            <div className=\"users-control_label\">Пароль</div>\n                            <small className=\"users-control_advice\">Не заполняется, если нет необходимости обновлять\n                                пароль существующего пользователя.</small>\n                            <div className=\"d-flex flex-row align-items-center\">\n                                <input id=\"input-password\" className=\"users-control_input\"\n                                       value={userInfo.password} onChange={handleUserInfo}\n                                       disabled={true} onBlur={handleBlur}/>\n                                <button type=\"button\" onClick={handlePassword}\n                                        className=\"tag-btn ml-1\"><FontAwesomeIcon className=\"icon-reload\"\n                                                                                  icon={faRedoAlt}\n                                                                                  size={\"sm\"}\n                                                                                  color={\"#ffffff\"}/></button>\n                            </div>\n                        </div>\n\n                        <div className=\"mt-3 mb-2\">\n                            <div className=\"users-control_label\">Тип пользователя</div>\n                            <select id=\"select-usertype\" className=\"users-control_select\" value={userInfo.role}\n                                    onChange={handleUserInfo} onBlur={handleBlur}>\n                                <option value={USER_TYPE_STUDENT}>Студент</option>\n                                <option value={USER_TYPE_PROFESSOR}>Преподаватель</option>\n                                <option value={USER_TYPE_METHODIST}>Методист</option>\n                            </select>\n                        </div>\n                        {defineRole()}\n\n                        <button type=\"button\" className=\"btn users-control_load mt-3 mb-3\"\n                                onClick={handleSubmit}>{btnText}\n                        </button>\n                    </div>\n                </div>\n                <UsersTable id={1} url={Urls.user.getProfessorsAll()} userType={USER_TYPE_PROFESSOR}\n                            title={\"Список преподавателей\"} rowClickEvent={handleUserEdit}/>\n                <UsersTable id={2} url={Urls.user.getStudentsAll()} userType={USER_TYPE_STUDENT}\n                            title={\"Список студентов\"} rowClickEvent={handleUserEdit}/>\n            </div>\n        </div>\n    )\n}\n\nexport default UsersControl;","import \"./pulseCheckBox.scss\"\nimport React from \"react\";\n\ntype Props = {\n    description: string\n    isChecked: (arg0: boolean) => void;\n}\n\nconst PulseCheckBox: React.FC<Props> = ({description, isChecked}) => {\n    const [checked, changeChecked] = React.useState(false);\n\n    const handleClick = React.useCallback(() => {\n        changeChecked(!checked);\n        isChecked(checked);\n    }, [checked, isChecked])\n\n    return (\n        <div className=\"d-flex flex-nowrap flex-row align-items-bottom\">\n            <input type=\"checkbox\" className=\"option-input checkbox\" onChange={handleClick}/>\n            <p className=\"pulse-description\">{description}</p>\n        </div>\n    )\n}\n\nexport default PulseCheckBox;","import React, {FormEvent} from \"react\";\nimport {MDBBtn, MDBInput} from \"mdbreact\";\nimport {Editor} from \"@tinymce/tinymce-react\";\nimport PulseCheckBox from \"@components/PulseCheckBox\";\nimport {TAG_EDUCATIONAL, TAG_GENERAL, TAG_IMPORTANT} from \"@config/config\";\nimport {useHistory} from \"react-router-dom\";\nimport {getTinymce} from \"@tinymce/tinymce-react/lib/es2015/main/ts/TinyMCE\";\nimport Admin from \"@media/admin.jpg\"\n\nimport \"./createPost.scss\";\n\ntype PostInfo = {\n    title: string,\n    postImgUrl: string,\n    tag: string,\n    allowComments: boolean,\n    content: string,\n    buttonText: string\n}\n\nconst CreatePost = () => {\n    const [postInfo, changePostInfo] = React.useState<PostInfo>({\n        title: \"\",\n        postImgUrl: Admin,\n        tag: \"\",\n        allowComments: false,\n        content: \"\",\n        buttonText: \"Предпросмотр\"\n    })\n    const [tagContent, changeTagContent] = React.useState(\"\")\n    const [tag, changeTag] = React.useState<HTMLElement | null>()\n    const [postImgInput, changePostImgInput] = React.useState<HTMLInputElement | null>();\n    const [isTextChanged, changeTextFlag] = React.useState(false);\n    const history = useHistory();\n\n    React.useEffect(() => {\n        changeTag(document.getElementById(\"post-tag\"));\n        changePostImgInput(document.getElementById(\"post-img\") as HTMLInputElement);\n    }, []);\n\n    const handleTitleChange = React.useCallback((e: FormEvent<HTMLInputElement>) => {\n        const oldInfo = postInfo;\n        oldInfo.title = (e.target as HTMLInputElement).value;\n        changePostInfo(oldInfo);\n    }, [postInfo]);\n\n    const handleEditorChange = React.useCallback((content: string, editor: any) => {\n        const oldInfo = {...postInfo};\n        oldInfo.content = content;\n        oldInfo.buttonText = \"Предпросмотр\";\n        changeTextFlag(false);\n        changePostInfo(oldInfo);\n    }, [postInfo]);\n\n    const handleButtonChange = React.useCallback(() => {\n        if (!isTextChanged) {\n            getTinymce()?.activeEditor.execCommand(\"mcePreview\");\n            //tinymce.get(\"post-create-editor\").execCommand(\"mcePreview\");\n        } else {\n            console.log(postInfo);\n            //history.push(\"/posts\");\n        }\n        changeTextFlag(true);\n        const oldInfo = {...postInfo};\n        oldInfo.buttonText = \"Опубликовать\";\n        changePostInfo(oldInfo);\n        //TEMP.posts.push(Parser(postInfo.content) as JSX.Element);\n        //console.log(TEMP);\n        //this.setState({buttonText: \"Опубликовать\"});\n    }, [isTextChanged, postInfo]);\n\n    const handleSelectChange = React.useCallback((e: React.ChangeEvent<HTMLSelectElement>) => {\n        if (!tag) {\n            return;\n        }\n        switch (e.target.value) {\n            case \"1\":\n                tag.style.color = \"#34a8bb\";\n                break;\n            case \"2\":\n                tag.style.color = \"#e86262\";\n                break;\n            default:\n                tag.style.color = \"#59b759\";\n        }\n    }, [tag]);\n\n    const handleImgChange = () => {\n        const oldPost = {...postInfo};\n        if (postImgInput && postImgInput.files && postImgInput.files[0]) {\n            oldPost.postImgUrl = URL.createObjectURL(postImgInput.files[0]);\n            changePostInfo(oldPost);\n            console.log(postInfo)\n        }\n    };\n\n    const handleCheckBoxChange = React.useCallback((isChecked: boolean) => {\n        const oldInfo = {...postInfo};\n        oldInfo.allowComments = isChecked;\n        changePostInfo(oldInfo);\n    }, [postInfo])\n\n    const filePickerCb = React.useCallback((callback: Function, value: any, meta: Record<string, any>) => {\n        if (meta.filetype === 'image') {\n            let input = document.createElement(\"input\");\n            let file: File;\n            input.setAttribute(\"type\", \"file\");\n            input.setAttribute(\"accept\", \"image/*\");\n            input.onchange = () => {\n                if (input.files) {\n                    file = input.files[0];\n                }\n                const reader = new FileReader();\n                reader.onload = (e) => {\n                    callback(e.target?.result, {\n                        alt: file.name\n                    });\n                }\n                reader.readAsDataURL(file);\n            };\n            input.click();\n        }\n    }, []);\n\n    return (\n        <div>\n            <div\n                className=\"post-card container-fluid d-flex h-100 justify-content-center align-items-center col-xl-10\">\n                <form className=\"post-create-card container\">\n                    <p className=\"h5 text-center mb-4\">Создние поста</p>\n                    <div className=\"d-flex flex-row\">\n                        <div className=\"col-2 d-flex flex-column flex-nowrap align-items-center\">\n                            <img id=\"blah\" src={postInfo.postImgUrl} alt=\"img not loaded\" className=\"post-img\"/>\n                            <input className=\"post-img\" type=\"file\" id=\"post-img\" accept=\"image/*\"\n                                   onChange={handleImgChange}/>\n                            <button className=\"btn-upload-img\" type=\"button\" onClick={() => {\n                                postImgInput?.click()\n                            }}>\n                                <span className=\"btn-title\">...</span>\n                            </button>\n                        </div>\n                        <div className=\"col-10\">\n                            <div className=\"grey-text\">\n                                <MDBInput label=\"Заголовок\" icon=\"heading\" group type=\"text\"\n                                          onChange={handleTitleChange}/>\n                                <div className=\"d-flex flex-row\">\n                                    <i id=\"post-tag\" className=\"fa fa-tag fa-lg position-absolute\"/>\n                                    <select className=\"post-tag\" defaultValue=\"0\" onChange={handleSelectChange}>\n                                        <option value=\"0\" hidden disabled>ТЭГ</option>\n                                        <option value=\"1\">{TAG_GENERAL}</option>\n                                        <option value=\"2\">{TAG_IMPORTANT}</option>\n                                        <option value=\"3\">{TAG_EDUCATIONAL}</option>\n                                    </select>\n                                </div>\n                                <div className=\"d-flex flex-row\">\n                                    <i className=\"fa fa-pencil-alt fa-lg position-absolute\"/>\n                                    <div className=\"editor-with-tag\">\n                                        <Editor\n                                            id=\"post-create-editor\"\n                                            apiKey=\"i2ukwtg8ixnvv92anoj0cspm5r696rucv5oxdaten85488x4\"\n                                            init={{\n                                                language: \"ru\",\n                                                min_height: 350,\n                                                height: 500,\n                                                max_height: 750,\n                                                plugins: [\n                                                    \"advlist autolink lists link image charmap print preview anchor\",\n                                                    \"searchreplace visualblocks code fullscreen \",\n                                                    \"insertdatetime media table paste code help wordcount emoticons hr imagetools\", //TODO: check imagetools proxy\n                                                ],\n                                                toolbar:\n                                                    \"undo redo | image hr| formatselect | bold italic forecolor backcolor | \\\n                                                    alignleft aligncenter alignright alignjustify | \\\n                                                    numlist bullist outdent indent | removeformat\",\n                                                style_formats_merge: true,\n                                                style_formats: [\n                                                    {\n                                                        title: 'Image Top', selector: 'img', styles: {\n                                                            'vertical-align': 'top'\n                                                        }\n                                                    },\n                                                    {\n                                                        title: 'Image Middle', selector: 'img', styles: {\n                                                            'vertical-align': 'middle'\n                                                        }\n                                                    },\n                                                    {\n                                                        title: 'Image Bottom', selector: 'img', styles: {\n                                                            'vertical-align': 'bottom'\n                                                        }\n                                                    },\n                                                ],\n                                                insertdatetime_formats: ['%H:%M:%S', '%d-%m-%Y', '%I:%M:%S %p'],\n                                                image_advtab: true,\n                                                fullscreen_native: true,\n                                                automatic_uploads: true,\n                                                image_description: false,\n                                                file_picker_types: \"image\",\n                                                paste_webkit_styles: 'color font-size',\n                                                paste_retain_style_properties: 'color font-size',\n                                                paste_data_images: false,\n                                                paste_as_text: false,\n                                                file_picker_callback: filePickerCb,\n                                                content_style: \"body { font-family:Helvetica,Arial,sans-serif; font-size:14px }\"\n                                            }}\n                                            value={postInfo.content}\n                                            onEditorChange={handleEditorChange}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"mt-3\">\n                                    <PulseCheckBox description=\"Разрешить комментарии\" isChecked={handleCheckBoxChange}/>\n                                </div>\n                            </div>\n                            <div className=\"text-center\">\n                                <MDBBtn outline color=\"cyan\" onClick={handleButtonChange}>\n                                    <span>{postInfo.buttonText}</span>\n                                </MDBBtn>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default CreatePost;","import React from \"react\";\nimport Admin from \"@media/admin.jpg\"\n\n\n\nconst Profile = () => {\n\n    const [imgUrl, changeImgUrl] = React.useState(Admin);\n    const [postImgInput, changePostImgInput] = React.useState<HTMLInputElement | null>();\n\n    const handleImgChange = () => {\n        if (postImgInput && postImgInput.files && postImgInput.files[0]) {\n            changeImgUrl(URL.createObjectURL(postImgInput.files[0]));\n        }\n    };\n\n    React.useEffect(() => {\n        changePostImgInput(document.getElementById(\"post-img\") as HTMLInputElement);\n    }, []);\n\n    return (\n        <div className=\"col-2 d-flex flex-column flex-nowrap align-items-center\">\n            <img id=\"blah\" src={imgUrl} alt=\"img not loaded\" className=\"post-img\"/>\n            <input className=\"post-img\" type=\"file\" id=\"post-img\" accept=\"image/*\"\n                   onChange={handleImgChange}/>\n            <button className=\"btn-upload-img\" type=\"button\" onClick={() => {\n                postImgInput?.click()\n            }}>\n                <span className=\"btn-title\">...</span>\n            </button>\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport {PrivateRoute} from \"@utils/privateRoute\"\nimport Header from \"@components/Header\";\nimport {Urls} from \"@config/urls\"\nimport Timetable from \"../pages/Timetable\";\nimport Auth from \"../pages/Authorization\";\nimport NotFoundPage from \"../pages/NotFound\";\nimport Home from \"../pages/Home\";\nimport UsersControl from \"../pages/UsersControl\";\nimport \"../styles/main.scss\"\nimport \"../styles/fontawesome-free-5.15.3-web/css/all.min.css\"\nimport CreatePost from \"../pages/PostCreate\";\nimport ViewPost from \"@components/ViewPost\";\nimport Profile from \"../pages/Profile\";\n\nexport const TEMP: { posts: Array<JSX.Element> } = {\n    posts: [],\n}\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <div className=\"App h-100\">\n                <Header/>\n                <Switch>\n                    <PrivateRoute exact path={Urls.root}\n                                  component={Home}/>\n                    <PrivateRoute exact path={Urls.feed.slugRoot}\n                                  component={Home}/>\n                    <PrivateRoute exact path={Urls.timetable.slugEdit}\n                                  component={Timetable}/>\n                    <PrivateRoute exact path={Urls.panel.slugRoot}\n                                  component={UsersControl}/>\n                    <PrivateRoute exact path={Urls.post.slugCreate}\n                                  component={CreatePost}/>\n                    <PrivateRoute path=\"/posts/:id\" component={ViewPost} />\n                    <PrivateRoute exact path={Urls.user.slugMe} component={Profile} />\n                    <Route exact path={Urls.auth} component={Auth}/>\n                    <Route path={Urls.notFound} component={NotFoundPage}/>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    )\n}\n\n\n// const App = () => {\n//     return (\n//         <BrowserRouter>\n//             <div className=\"App h-100\">\n//                 <CreatePost/>\n//             </div>\n//         </BrowserRouter>\n//     )\n// }\n\nexport default App;\n\n//https://github.com/ktsstudio/kts-school-frontend","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./styles/main.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}